{"_id":"@electron/windows-sign","_rev":"14-ea1ec87379f3c6eb91e8de394434f894","name":"@electron/windows-sign","dist-tags":{"latest":"2.0.2"},"versions":{"0.0.0":{"name":"@electron/windows-sign","version":"0.0.0","_id":"@electron/windows-sign@0.0.0","maintainers":[{"name":"electronhq","email":"marshallofsound+electronhqnpm@electronjs.org"}],"dist":{"shasum":"1f8d80f4244a9274555f2059c9dff5bfac05e9f0","tarball":"https://registry.npmjs.org/@electron/windows-sign/-/windows-sign-0.0.0.tgz","fileCount":1,"integrity":"sha512-FHeXR0bpt45PLjO/yDH/saU0Q3dfVYtbrQDQrdCInDaxIwwKPFuJVQbYIcKdWC2cXZ/MbPyH/BJmW+pmOZhRrg==","signatures":[{"sig":"MEYCIQCzgb/AhxlAmkhdBPp1DOZufOHL8YRdKe34LDMjrDjl3wIhANgUMhNx+Eb/qRaJe/Ht2wzJiE/jNob8TqBJ1GkRTnjk","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":61},"_npmUser":{"name":"electronhq","email":"marshallofsound+electronhqnpm@electronjs.org"},"_npmVersion":"10.1.0","directories":{},"_nodeVersion":"20.8.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/windows-sign_0.0.0_1698447035597_0.4462034410393827","host":"s3://npm-registry-packages"}},"1.0.0":{"name":"@electron/windows-sign","version":"1.0.0","author":{"name":"Felix Rieseberg","email":"felix@felixrieseberg.com"},"license":"BSD-2-Clause","_id":"@electron/windows-sign@1.0.0","maintainers":[{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"}],"homepage":"https://github.com/electron/windows-sign","bugs":{"url":"https://github.com/electron/windows-sign/issues"},"bin":{"electron-windows-sign":"bin/electron-windows-sign.js"},"dist":{"shasum":"f08a0a5d4b96840ab637ce11228a59ee8b665287","tarball":"https://registry.npmjs.org/@electron/windows-sign/-/windows-sign-1.0.0.tgz","fileCount":60,"integrity":"sha512-sdkQYAR/TQCEyYgz2jMbusL/ljdj6qA7vyIm/S9HICMAitXhXROFHUOLLgiORj1uiaf2EOB2U33DatGubUuZaQ==","signatures":[{"sig":"MEUCIBMwaWJ5G2rJEW/8K7NcSQmtCWUHGHDYN08m9s+3HkhrAiEA8TOaBbrhhCPz6ubCTtYAuYnZ6rV1xmaBrMXIPdRDf1A=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":518556},"main":"dist/cjs/index.js","types":"./dist/cjs/index.d.ts","module":"dist/esm/index.js","engines":{"node":">=16.0.0"},"gitHead":"b6a107cd3058a1d0ad1474cc981f4f956c6b681c","scripts":{"lint":"eslint --ext .ts,.js src bin test","test":"globstar -- node --import tsx --test \"test/**/*.spec.ts\"","build":"tsc && tsc -p tsconfig.esm.json","test:loader":"globstar -- node --loader tsx --test \"test/**/*.spec.ts\"","prepublishOnly":"yarn build"},"_npmUser":{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"},"repository":{"url":"git+https://github.com/electron/windows-sign.git","type":"git"},"_npmVersion":"9.8.1","description":"Codesign Electron Windows apps","directories":{},"_nodeVersion":"18.18.0","dependencies":{"debug":"^4.3.4","fs-extra":"^11.1.1","minimist":"^1.2.8"},"_hasShrinkwrap":false,"devDependencies":{"tsx":"^3.14.0","eslint":"^8.52.0","globstar":"^1.0.0","standard":"^17.1.0","typescript":"^5.2.2","@types/node":"^18.18.7","@types/debug":"^4.1.10","@types/fs-extra":"^11.0.3","eslint-plugin-node":"^11.1.0","eslint-config-eslint":"^9.0.0","eslint-plugin-import":"^2.29.0","eslint-plugin-promise":"^6.1.1","eslint-config-standard":"^17.1.0","@typescript-eslint/parser":"^5.62.0","@typescript-eslint/eslint-plugin":"^5.62.0","@continuous-auth/semantic-release-npm":"^3.0.0"},"_npmOperationalInternal":{"tmp":"tmp/windows-sign_1.0.0_1698868656306_0.5320363841985154","host":"s3://npm-registry-packages"}},"1.1.0":{"name":"@electron/windows-sign","version":"1.1.0","author":{"name":"Felix Rieseberg","email":"felix@felixrieseberg.com"},"license":"BSD-2-Clause","_id":"@electron/windows-sign@1.1.0","maintainers":[{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"}],"homepage":"https://github.com/electron/windows-sign","bugs":{"url":"https://github.com/electron/windows-sign/issues"},"bin":{"electron-windows-sign":"bin/electron-windows-sign.js"},"dist":{"shasum":"83a42d0372b8f8a83d8f63e5b10791012ffd6760","tarball":"https://registry.npmjs.org/@electron/windows-sign/-/windows-sign-1.1.0.tgz","fileCount":46,"integrity":"sha512-8AkEWLW+F98+ryIhHLvffAZEy9L3N8xQZbBX5D7TouZ14LZWSPjsoChafeKr6+3Vq1stiX+BftCvp05Hh8IvFg==","signatures":[{"sig":"MEQCIBGBoq5d9O3UDoZcypOy1fvOLIECRFlH90rfcW6jvWDeAiBJz1j7/0LN9TfiZyXUl76AblWg+jiAYZdAIRxbkjy16A==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":518440},"main":"dist/cjs/index.js","types":"./dist/cjs/index.d.ts","module":"dist/esm/index.js","engines":{"node":">=16.0.0"},"gitHead":"8b23eaa900b4ca0905699b4fa17ca22246624fdf","scripts":{"lint":"eslint --ext .ts,.js src bin test","test":"globstar -- node --import tsx --test \"test/**/*.spec.ts\"","build":"tsc && tsc -p tsconfig.esm.json","test:loader":"globstar -- node --loader tsx --test \"test/**/*.spec.ts\"","prepublishOnly":"yarn build"},"_npmUser":{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"},"repository":{"url":"git+https://github.com/electron/windows-sign.git","type":"git"},"_npmVersion":"10.2.4","description":"Codesign Electron Windows apps","directories":{},"_nodeVersion":"20.11.0","dependencies":{"debug":"^4.3.4","fs-extra":"^11.1.1","minimist":"^1.2.8","postject":"^1.0.0-alpha.6","cross-dirname":"^0.1.0"},"_hasShrinkwrap":false,"devDependencies":{"tsx":"^3.14.0","eslint":"^8.52.0","globstar":"^1.0.0","standard":"^17.1.0","typescript":"^5.2.2","@types/node":"^18.18.7","@types/debug":"^4.1.10","@types/fs-extra":"^11.0.3","eslint-plugin-node":"^11.1.0","eslint-config-eslint":"^9.0.0","eslint-plugin-import":"^2.29.0","eslint-plugin-promise":"^6.1.1","eslint-config-standard":"^17.1.0","@typescript-eslint/parser":"^5.62.0","@typescript-eslint/eslint-plugin":"^5.62.0"},"_npmOperationalInternal":{"tmp":"tmp/windows-sign_1.1.0_1707081623196_0.21515546342149827","host":"s3://npm-registry-packages"}},"1.1.1":{"name":"@electron/windows-sign","version":"1.1.1","author":{"name":"Felix Rieseberg","email":"felix@felixrieseberg.com"},"license":"BSD-2-Clause","_id":"@electron/windows-sign@1.1.1","maintainers":[{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"}],"homepage":"https://github.com/electron/windows-sign","bugs":{"url":"https://github.com/electron/windows-sign/issues"},"bin":{"electron-windows-sign":"bin/electron-windows-sign.js"},"dist":{"shasum":"4ac6a2f782e70251cc1bd7349485a764ee07320f","tarball":"https://registry.npmjs.org/@electron/windows-sign/-/windows-sign-1.1.1.tgz","fileCount":46,"integrity":"sha512-g8/atfOCKuuGedjVE6Xu/rlBtJvfDrmBH9UokBrjrvBVWdVz3SGV7DTjPTLvl7F+XUlmqj4genub62r3jKHIHw==","signatures":[{"sig":"MEYCIQDBLROtUPU2MGn3Ku1gcHJJuoPFY9EtIvL8AFAb5sRzhQIhAI0rkBLt8vUlr1U7m3dG1YTC5JzbD+1vSP0/LadLXFpz","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":518280},"main":"dist/cjs/index.js","types":"./dist/cjs/index.d.ts","module":"dist/esm/index.js","engines":{"node":">=16.0.0"},"gitHead":"2374696af992e6fd901e0f2918e2bb5e8979b425","scripts":{"lint":"eslint --ext .ts,.js src bin test","test":"globstar -- node --import tsx --test \"test/**/*.spec.ts\"","build":"tsc && tsc -p tsconfig.esm.json","test:loader":"globstar -- node --loader tsx --test \"test/**/*.spec.ts\"","prepublishOnly":"yarn build"},"_npmUser":{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"},"repository":{"url":"git+https://github.com/electron/windows-sign.git","type":"git"},"_npmVersion":"10.2.4","description":"Codesign Electron Windows apps","directories":{},"_nodeVersion":"20.11.0","dependencies":{"debug":"^4.3.4","fs-extra":"^11.1.1","minimist":"^1.2.8","postject":"^1.0.0-alpha.6","cross-dirname":"^0.1.0"},"_hasShrinkwrap":false,"devDependencies":{"tsx":"^3.14.0","eslint":"^8.52.0","globstar":"^1.0.0","standard":"^17.1.0","typescript":"^5.2.2","@types/node":"^18.18.7","@types/debug":"^4.1.10","@types/fs-extra":"^11.0.3","eslint-plugin-node":"^11.1.0","eslint-config-eslint":"^9.0.0","eslint-plugin-import":"^2.29.0","eslint-plugin-promise":"^6.1.1","eslint-config-standard":"^17.1.0","@typescript-eslint/parser":"^5.62.0","@typescript-eslint/eslint-plugin":"^5.62.0"},"_npmOperationalInternal":{"tmp":"tmp/windows-sign_1.1.1_1707267758380_0.38105379782191906","host":"s3://npm-registry-packages"}},"1.1.2":{"name":"@electron/windows-sign","version":"1.1.2","author":{"name":"Felix Rieseberg","email":"felix@felixrieseberg.com"},"license":"BSD-2-Clause","_id":"@electron/windows-sign@1.1.2","maintainers":[{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"}],"homepage":"https://github.com/electron/windows-sign","bugs":{"url":"https://github.com/electron/windows-sign/issues"},"bin":{"electron-windows-sign":"bin/electron-windows-sign.js"},"dist":{"shasum":"5489861ca62348d2300407e85d949af95849955e","tarball":"https://registry.npmjs.org/@electron/windows-sign/-/windows-sign-1.1.2.tgz","fileCount":46,"integrity":"sha512-eXEiZjDtxW3QORCWfRUarANPRTlH9B6At4jqBZJ0NzokSGutXQUVLPA6WmGpIhDW6w2yCMdHW1EJd1HrXtU5sg==","signatures":[{"sig":"MEUCIQCWctxz5+yENehbp3mYd0GtDprv1tds6RZl0VCQKa9FyQIgf+zYZssnkiIjXJxdUDO5e9Yyyi5BboejSMFXw6HxYus=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":518279},"main":"dist/cjs/index.js","types":"./dist/cjs/index.d.ts","module":"dist/esm/index.js","engines":{"node":">=14.14"},"gitHead":"9fa70fa7d468500487d1d5d4bb9dbc82a12db80a","scripts":{"lint":"eslint --ext .ts,.js src bin test","test":"globstar -- node --import tsx --test \"test/**/*.spec.ts\"","build":"tsc && tsc -p tsconfig.esm.json","test:loader":"globstar -- node --loader tsx --test \"test/**/*.spec.ts\"","prepublishOnly":"yarn build"},"_npmUser":{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"},"repository":{"url":"git+https://github.com/electron/windows-sign.git","type":"git"},"_npmVersion":"10.2.4","description":"Codesign Electron Windows apps","directories":{},"_nodeVersion":"20.11.0","dependencies":{"debug":"^4.3.4","fs-extra":"^11.1.1","minimist":"^1.2.8","postject":"^1.0.0-alpha.6","cross-dirname":"^0.1.0"},"_hasShrinkwrap":false,"devDependencies":{"tsx":"^3.14.0","eslint":"^8.52.0","globstar":"^1.0.0","standard":"^17.1.0","typescript":"^5.2.2","@types/node":"^18.18.7","@types/debug":"^4.1.10","@types/fs-extra":"^11.0.3","eslint-plugin-node":"^11.1.0","eslint-config-eslint":"^9.0.0","eslint-plugin-import":"^2.29.0","eslint-plugin-promise":"^6.1.1","eslint-config-standard":"^17.1.0","@typescript-eslint/parser":"^5.62.0","@typescript-eslint/eslint-plugin":"^5.62.0"},"_npmOperationalInternal":{"tmp":"tmp/windows-sign_1.1.2_1709254876266_0.3429379145717557","host":"s3://npm-registry-packages"}},"1.1.3":{"name":"@electron/windows-sign","version":"1.1.3","author":{"name":"Felix Rieseberg","email":"felix@felixrieseberg.com"},"license":"BSD-2-Clause","_id":"@electron/windows-sign@1.1.3","homepage":"https://github.com/electron/windows-sign","bugs":{"url":"https://github.com/electron/windows-sign/issues"},"bin":{"electron-windows-sign":"bin/electron-windows-sign.js"},"dist":{"shasum":"52023d17d8f6c686d934f518be76736f6f2f0aef","tarball":"https://registry.npmjs.org/@electron/windows-sign/-/windows-sign-1.1.3.tgz","fileCount":46,"integrity":"sha512-OqVSdAe+/88fIjvTDWiy+5Ho1nXsiBhE5RTsIQ6M/zcxcDAEP2TlQCkOyusItnmzXRN+XTFaK9gKhiZ6KGyXQw==","signatures":[{"sig":"MEYCIQCNLMIZ173WsrHXQGl5LTcYVaGbuBqRwFjMIfPweTcEngIhAPycBzwybuYxXAct1CNDfAbjTRoUUpP2tPlkGHWSd3QM","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":526746},"main":"dist/cjs/index.js","types":"./dist/cjs/index.d.ts","module":"dist/esm/index.js","engines":{"node":">=14.14"},"gitHead":"812e78123d2f0c07be7dee77ff063acd7af45645","scripts":{"docs":"npx typedoc","lint":"eslint --ext .ts,.js src bin test","test":"globstar -- node --import tsx --test \"test/**/*.spec.ts\"","build":"tsc && tsc -p tsconfig.esm.json","test:loader":"globstar -- node --loader tsx --test \"test/**/*.spec.ts\"","prepublishOnly":"yarn build"},"_npmUser":{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"},"repository":{"url":"git+https://github.com/electron/windows-sign.git","type":"git"},"_npmVersion":"10.7.0","description":"Codesign Electron Windows apps","directories":{},"_nodeVersion":"20.15.0","dependencies":{"debug":"^4.3.4","fs-extra":"^11.1.1","minimist":"^1.2.8","postject":"^1.0.0-alpha.6","cross-dirname":"^0.1.0"},"_hasShrinkwrap":false,"devDependencies":{"tsx":"^3.14.0","eslint":"^8.52.0","typedoc":"~0.25.13","globstar":"^1.0.0","standard":"^17.1.0","typescript":"^5.2.2","@types/node":"^18.18.7","@types/debug":"^4.1.10","@types/fs-extra":"^11.0.3","eslint-plugin-node":"^11.1.0","eslint-config-eslint":"^9.0.0","eslint-plugin-import":"^2.29.0","eslint-plugin-promise":"^6.1.1","eslint-config-standard":"^17.1.0","@typescript-eslint/parser":"^5.62.0","@typescript-eslint/eslint-plugin":"^5.62.0"},"_npmOperationalInternal":{"tmp":"tmp/windows-sign_1.1.3_1719590750071_0.45481215251970863","host":"s3://npm-registry-packages"}},"1.2.0":{"name":"@electron/windows-sign","version":"1.2.0","author":{"name":"Felix Rieseberg","email":"felix@felixrieseberg.com"},"license":"BSD-2-Clause","_id":"@electron/windows-sign@1.2.0","maintainers":[{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"}],"homepage":"https://github.com/electron/windows-sign","bugs":{"url":"https://github.com/electron/windows-sign/issues"},"bin":{"electron-windows-sign":"bin/electron-windows-sign.js"},"dist":{"shasum":"d4fe32f05b33070e3d9d45cfa899d4342b997f99","tarball":"https://registry.npmjs.org/@electron/windows-sign/-/windows-sign-1.2.0.tgz","fileCount":46,"integrity":"sha512-5zfLHfD6kGgsXzuYlKwlWWO8w6dboKy4dhd7rGnR4rQYumuDgPAF2TYjEa8LUi89KdHxtDy2btq02KvbjhK9Iw==","signatures":[{"sig":"MEYCIQC9AqPeKR6APLulxkQ5hzyVXZjLrJ4Z89R5uQdYvkCcHAIhAOaEFt4zh+ZdoC4Eh14rhJ74mUKF3aN7OCLUkqzahIih","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@electron%2fwindows-sign@1.2.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":531195},"main":"dist/cjs/index.js","types":"./dist/cjs/index.d.ts","module":"dist/esm/index.js","engines":{"node":">=14.14"},"gitHead":"8e54c1dd86a85f88364edfeb58237ea8cb0952d1","scripts":{"docs":"npx typedoc","lint":"eslint --ext .ts,.js src bin test","test":"globstar -- node --import tsx --test \"test/**/*.spec.ts\"","build":"tsc && tsc -p tsconfig.esm.json","test:loader":"globstar -- node --loader tsx --test \"test/**/*.spec.ts\"","prepublishOnly":"yarn build"},"_npmUser":{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"},"repository":{"url":"git+https://github.com/electron/windows-sign.git","type":"git"},"_npmVersion":"10.8.2","description":"Codesign Electron Windows apps","directories":{},"_nodeVersion":"20.18.0","dependencies":{"debug":"^4.3.4","fs-extra":"^11.1.1","minimist":"^1.2.8","postject":"^1.0.0-alpha.6","cross-dirname":"^0.1.0"},"publishConfig":{"provenance":true},"_hasShrinkwrap":false,"devDependencies":{"tsx":"^3.14.0","eslint":"^8.52.0","typedoc":"~0.25.13","globstar":"^1.0.0","standard":"^17.1.0","typescript":"^5.2.2","@types/node":"^18.18.7","@types/debug":"^4.1.10","@types/fs-extra":"^11.0.3","eslint-plugin-node":"^11.1.0","eslint-config-eslint":"^9.0.0","eslint-plugin-import":"^2.29.0","eslint-plugin-promise":"^6.1.1","eslint-config-standard":"^17.1.0","@typescript-eslint/parser":"^5.62.0","@typescript-eslint/eslint-plugin":"^5.62.0"},"_npmOperationalInternal":{"tmp":"tmp/windows-sign_1.2.0_1730854221825_0.5995305038411263","host":"s3://npm-registry-packages"}},"1.2.1":{"name":"@electron/windows-sign","version":"1.2.1","author":{"name":"Felix Rieseberg","email":"felix@felixrieseberg.com"},"license":"BSD-2-Clause","_id":"@electron/windows-sign@1.2.1","maintainers":[{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"}],"homepage":"https://github.com/electron/windows-sign","bugs":{"url":"https://github.com/electron/windows-sign/issues"},"bin":{"electron-windows-sign":"bin/electron-windows-sign.js"},"dist":{"shasum":"8e4674cfdeb7cd58e14b58e624500d9f03f2873d","tarball":"https://registry.npmjs.org/@electron/windows-sign/-/windows-sign-1.2.1.tgz","fileCount":46,"integrity":"sha512-YfASnrhJ+ve6Q43ZiDwmpBgYgi2u0bYjeAVi2tDfN7YWAKO8X9EEOuPGtqbJpPLM6TfAHimghICjWe2eaJ8BAg==","signatures":[{"sig":"MEUCIGmi+TxuV2jw+FL0A9tR0r/ly+6OesMzx1/5u8a2z7iNAiEA8ynNX2wd9MUeKcCLHZE6orTJkcXKIgJ2RI6rcNl3fNQ=","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@electron%2fwindows-sign@1.2.1","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":531445},"main":"dist/cjs/index.js","types":"./dist/cjs/index.d.ts","module":"dist/esm/index.js","engines":{"node":">=14.14"},"gitHead":"dfd416402b4370e3123e245e0d363bab7777b9e1","scripts":{"docs":"npx typedoc","lint":"eslint --ext .ts,.js src bin test","test":"globstar -- node --import tsx --test \"test/**/*.spec.ts\"","build":"tsc && tsc -p tsconfig.esm.json","test:loader":"globstar -- node --loader tsx --test \"test/**/*.spec.ts\"","prepublishOnly":"yarn build"},"_npmUser":{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"},"repository":{"url":"git+https://github.com/electron/windows-sign.git","type":"git"},"_npmVersion":"10.8.2","description":"Codesign Electron Windows apps","directories":{},"_nodeVersion":"20.18.2","dependencies":{"debug":"^4.3.4","fs-extra":"^11.1.1","minimist":"^1.2.8","postject":"^1.0.0-alpha.6","cross-dirname":"^0.1.0"},"publishConfig":{"provenance":true},"_hasShrinkwrap":false,"devDependencies":{"tsx":"^3.14.0","eslint":"^8.52.0","typedoc":"~0.25.13","globstar":"^1.0.0","standard":"^17.1.0","typescript":"^5.2.2","@types/node":"^18.18.7","@types/debug":"^4.1.10","@types/fs-extra":"^11.0.3","eslint-plugin-node":"^11.1.0","eslint-config-eslint":"^9.0.0","eslint-plugin-import":"^2.29.0","eslint-plugin-promise":"^6.1.1","eslint-config-standard":"^17.1.0","@typescript-eslint/parser":"^5.62.0","@typescript-eslint/eslint-plugin":"^5.62.0"},"_npmOperationalInternal":{"tmp":"tmp/windows-sign_1.2.1_1739477163175_0.227851826261797","host":"s3://npm-registry-packages-npm-production"}},"1.2.2":{"name":"@electron/windows-sign","version":"1.2.2","author":{"name":"Felix Rieseberg","email":"felix@felixrieseberg.com"},"license":"BSD-2-Clause","_id":"@electron/windows-sign@1.2.2","maintainers":[{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"}],"homepage":"https://github.com/electron/windows-sign","bugs":{"url":"https://github.com/electron/windows-sign/issues"},"bin":{"electron-windows-sign":"bin/electron-windows-sign.js"},"dist":{"shasum":"8ceaad52d5c1eb18702f48103d5f3bc7c338fa9d","tarball":"https://registry.npmjs.org/@electron/windows-sign/-/windows-sign-1.2.2.tgz","fileCount":46,"integrity":"sha512-dfZeox66AvdPtb2lD8OsIIQh12Tp0GNCRUDfBHIKGpbmopZto2/A8nSpYYLoedPIHpqkeblZ/k8OV0Gy7PYuyQ==","signatures":[{"sig":"MEQCIHazVRj/mzEGWXQrw9BGGkBTglbxdbugqX9D4gZwgpFtAiBkULF90onNA+sDmkkR9gOeHKKzkgBUb08NlDXz59sJMw==","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@electron%2fwindows-sign@1.2.2","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":531821},"main":"dist/cjs/index.js","types":"./dist/cjs/index.d.ts","module":"dist/esm/index.js","engines":{"node":">=14.14"},"gitHead":"c2a0c7897da0e24ac3d231b35e6860a2e1aa2eda","scripts":{"docs":"npx typedoc","lint":"eslint --ext .ts,.js src bin test","test":"globstar -- node --import tsx --test \"test/**/*.spec.ts\"","build":"tsc && tsc -p tsconfig.esm.json","test:loader":"globstar -- node --loader tsx --test \"test/**/*.spec.ts\"","prepublishOnly":"yarn build"},"_npmUser":{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"},"repository":{"url":"git+https://github.com/electron/windows-sign.git","type":"git"},"_npmVersion":"10.8.2","description":"Codesign Electron Windows apps","directories":{},"_nodeVersion":"20.19.1","dependencies":{"debug":"^4.3.4","fs-extra":"^11.1.1","minimist":"^1.2.8","postject":"^1.0.0-alpha.6","cross-dirname":"^0.1.0"},"publishConfig":{"provenance":true},"_hasShrinkwrap":false,"devDependencies":{"tsx":"^3.14.0","eslint":"^8.52.0","typedoc":"~0.25.13","globstar":"^1.0.0","standard":"^17.1.0","typescript":"^5.2.2","@types/node":"^18.18.7","@types/debug":"^4.1.10","@types/fs-extra":"^11.0.3","eslint-plugin-node":"^11.1.0","eslint-config-eslint":"^9.0.0","eslint-plugin-import":"^2.29.0","eslint-plugin-promise":"^6.1.1","eslint-config-standard":"^17.1.0","@typescript-eslint/parser":"^5.62.0","@typescript-eslint/eslint-plugin":"^5.62.0"},"_npmOperationalInternal":{"tmp":"tmp/windows-sign_1.2.2_1746215919710_0.1449286639835341","host":"s3://npm-registry-packages-npm-production"}},"2.0.0":{"name":"@electron/windows-sign","version":"2.0.0","author":{"name":"Felix Rieseberg","email":"felix@felixrieseberg.com"},"license":"BSD-2-Clause","_id":"@electron/windows-sign@2.0.0","maintainers":[{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"}],"homepage":"https://github.com/electron/windows-sign","bugs":{"url":"https://github.com/electron/windows-sign/issues"},"bin":{"electron-windows-sign":"bin/electron-windows-sign.mjs"},"dist":{"shasum":"097670d5529374a44e1e811e908cfc11b2c83c1a","tarball":"https://registry.npmjs.org/@electron/windows-sign/-/windows-sign-2.0.0.tgz","fileCount":26,"integrity":"sha512-ydPPtFx1CXc4jQwWzxe973N9N7V/Ev2kvHrj8QjhyjSApep6TGvGaLVNZsSsHzWe6iASV7DHaBT393eBZH9O/g==","signatures":[{"sig":"MEYCIQCsUC9WWLTikjr+9XVThDiELxD4oomGGSD2qeQPYtW5JgIhAPfSowDNRihfgHuBfBuau+WwzAFUIRlwY08sqvMFHRLj","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@electron%2fwindows-sign@2.0.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":504299},"type":"module","engines":{"node":">=22.12.0"},"exports":"./dist/index.js","gitHead":"683929b3b7a83218b0a6177c17dfb439291709db","scripts":{"docs":"npx typedoc","lint":"prettier --check src test && eslint --ext .ts,.mjs src bin test","test":"globstar -- node --import tsx --test \"test/**/*.spec.ts\"","build":"tsc","prepare":"husky install","prepublishOnly":"yarn build"},"_npmUser":{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"},"repository":{"url":"git+https://github.com/electron/windows-sign.git","type":"git"},"_npmVersion":"10.9.0","description":"Codesign Electron Windows apps","directories":{},"lint-staged":{"*.{js,ts}":["prettier --write","eslint --fix"]},"_nodeVersion":"22.12.0","dependencies":{"debug":"^4.3.4","postject":"^1.0.0-alpha.6","graceful-fs":"^4.2.11"},"publishConfig":{"provenance":true},"_hasShrinkwrap":false,"devDependencies":{"tsx":"^3.14.0","husky":"^8.0.3","eslint":"^8.56.0","typedoc":"~0.25.13","globstar":"^1.0.0","prettier":"^3.5.3","typescript":"^5.2.2","@types/node":"~22.10.7","lint-staged":"^14.0.1","@types/debug":"^4.1.10","@tsconfig/node22":"^22.0.1","@types/graceful-fs":"^4.1.6","eslint-plugin-node":"^11.1.0","eslint-config-eslint":"^9.0.0","eslint-plugin-import":"^2.29.0","eslint-plugin-promise":"^6.1.1","eslint-config-prettier":"^10.1.5","@typescript-eslint/parser":"^6.0.0","@typescript-eslint/eslint-plugin":"^6.0.0"},"_npmOperationalInternal":{"tmp":"tmp/windows-sign_2.0.0_1753833700924_0.680220288224122","host":"s3://npm-registry-packages-npm-production"}},"2.0.1":{"name":"@electron/windows-sign","version":"2.0.1","author":{"name":"Felix Rieseberg","email":"felix@felixrieseberg.com"},"license":"BSD-2-Clause","_id":"@electron/windows-sign@2.0.1","maintainers":[{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"}],"homepage":"https://github.com/electron/windows-sign","bugs":{"url":"https://github.com/electron/windows-sign/issues"},"bin":{"electron-windows-sign":"bin/electron-windows-sign.mjs"},"dist":{"shasum":"6711ad7abd5ec21f69c0ce95eb76c4ccd299bb42","tarball":"https://registry.npmjs.org/@electron/windows-sign/-/windows-sign-2.0.1.tgz","fileCount":26,"integrity":"sha512-tNmSvCTsMJeh/4iQBCnyJA24kJKkvdmge5IviVwSUgNJkoj4wRlPhyBIDHGRfVeIh92qqYBcMCdoyBff6RYYFA==","signatures":[{"sig":"MEYCIQCU4CDamZ74v/SVsMSSypiZMq0yxX/hGY0UnUO/uY2oBwIhAM4o/EPfmCipj96K5LJ9FCFSwylrNRmBBTDo5HtdOT4z","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@electron%2fwindows-sign@2.0.1","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":502759},"type":"module","engines":{"node":">=22.12.0"},"exports":"./dist/index.js","gitHead":"34298ad6ad9c7cb11425dac299fbd18b377d0f3a","scripts":{"lint":"prettier --check src test && eslint --ext .ts,.mjs src bin test","test":"globstar -- node --import tsx --test \"test/**/*.spec.ts\"","build":"tsc","prepare":"husky install","build:docs":"npx typedoc","prepublishOnly":"yarn build"},"_npmUser":{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"},"repository":{"url":"git+https://github.com/electron/windows-sign.git","type":"git"},"_npmVersion":"10.9.0","description":"Codesign Electron Windows apps","directories":{},"lint-staged":{"*.{js,ts}":["prettier --write","eslint --fix"]},"_nodeVersion":"22.12.0","dependencies":{"debug":"^4.3.4","postject":"^1.0.0-alpha.6","graceful-fs":"^4.2.11"},"publishConfig":{"provenance":true},"_hasShrinkwrap":false,"devDependencies":{"tsx":"^3.14.0","husky":"^8.0.3","eslint":"^8.56.0","typedoc":"~0.25.13","globstar":"^1.0.0","prettier":"^3.5.3","typescript":"^5.2.2","@types/node":"~22.10.7","lint-staged":"^14.0.1","@types/debug":"^4.1.10","@tsconfig/node22":"^22.0.1","@types/graceful-fs":"^4.1.6","eslint-plugin-node":"^11.1.0","eslint-config-eslint":"^9.0.0","eslint-plugin-import":"^2.29.0","eslint-plugin-promise":"^6.1.1","eslint-config-prettier":"^10.1.5","@typescript-eslint/parser":"^6.0.0","@typescript-eslint/eslint-plugin":"^6.0.0"},"_npmOperationalInternal":{"tmp":"tmp/windows-sign_2.0.1_1753911319441_0.02131840208075042","host":"s3://npm-registry-packages-npm-production"}},"2.0.2":{"name":"@electron/windows-sign","version":"2.0.2","description":"Codesign Electron Windows apps","type":"module","exports":"./dist/index.js","bin":{"electron-windows-sign":"bin/electron-windows-sign.mjs"},"repository":{"type":"git","url":"git+https://github.com/electron/windows-sign.git"},"author":{"name":"Felix Rieseberg","email":"felix@felixrieseberg.com"},"license":"BSD-2-Clause","bugs":{"url":"https://github.com/electron/windows-sign/issues"},"homepage":"https://github.com/electron/windows-sign","publishConfig":{"provenance":true},"dependencies":{"debug":"^4.3.4","graceful-fs":"^4.2.11","postject":"^1.0.0-alpha.6"},"devDependencies":{"@tsconfig/node22":"^22.0.1","@types/debug":"^4.1.10","@types/graceful-fs":"^4.1.6","@types/node":"~22.10.7","@typescript-eslint/eslint-plugin":"^6.0.0","@typescript-eslint/parser":"^6.0.0","eslint":"^8.56.0","eslint-config-eslint":"^9.0.0","eslint-config-prettier":"^10.1.5","eslint-plugin-import":"^2.29.0","eslint-plugin-node":"^11.1.0","eslint-plugin-promise":"^6.1.1","globstar":"^1.0.0","husky":"^8.0.3","lint-staged":"^14.0.1","prettier":"^3.5.3","tsx":"^3.14.0","typedoc":"~0.25.13","typescript":"^5.2.2"},"scripts":{"build":"tsc","build:docs":"npx typedoc","lint":"prettier --check src test && eslint --ext .ts,.mjs src bin test","test":"globstar -- node --import tsx --test \"test/**/*.spec.ts\"","prepublishOnly":"yarn build","prepare":"husky install"},"engines":{"node":">=22.12.0"},"lint-staged":{"*.{js,ts}":["prettier --write","eslint --fix"]},"_id":"@electron/windows-sign@2.0.2","gitHead":"7a7dbaff526c4c39189335b9f6a27707ed2c9a46","_nodeVersion":"22.12.0","_npmVersion":"10.9.0","dist":{"integrity":"sha512-9Lldk4pvRBh/BWhwopW4CxCnVoztEAVWdxvVVwpvrFd/3QU3dVn15IRmVB9i46IqpAg1Y42cFtRT0NQKZPpc5A==","shasum":"7396f18c19e407751ffe8528628e292cba52c634","tarball":"https://registry.npmjs.org/@electron/windows-sign/-/windows-sign-2.0.2.tgz","fileCount":26,"unpackedSize":502766,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@electron%2fwindows-sign@2.0.2","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEYCIQCcNip7YmHaKxxrDZe6FiMV7h9rth35Jd2/ipjk4yXZawIhAJy3W2F+6oJ9zE38XLDhKHiT9jDJb20Prkuiov8U42XS"}]},"_npmUser":{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"},"directories":{},"maintainers":[{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/windows-sign_2.0.2_1753917651987_0.06319990201171488"},"_hasShrinkwrap":false}},"time":{"created":"2023-10-27T22:50:35.488Z","modified":"2025-07-30T23:20:52.783Z","0.0.0":"2023-10-27T22:50:35.782Z","1.0.0":"2023-11-01T19:57:36.608Z","1.1.0":"2024-02-04T21:20:23.372Z","1.1.1":"2024-02-07T01:02:38.590Z","1.1.2":"2024-03-01T01:01:16.419Z","1.1.3":"2024-06-28T16:05:50.281Z","1.2.0":"2024-11-06T00:50:22.151Z","1.2.1":"2025-02-13T20:06:03.534Z","1.2.2":"2025-05-02T19:58:40.026Z","2.0.0":"2025-07-30T00:01:41.197Z","2.0.1":"2025-07-30T21:35:19.699Z","2.0.2":"2025-07-30T23:20:52.230Z"},"bugs":{"url":"https://github.com/electron/windows-sign/issues"},"author":{"name":"Felix Rieseberg","email":"felix@felixrieseberg.com"},"license":"BSD-2-Clause","homepage":"https://github.com/electron/windows-sign","repository":{"type":"git","url":"git+https://github.com/electron/windows-sign.git"},"description":"Codesign Electron Windows apps","maintainers":[{"name":"electron-cfa","email":"info+cfa-npm@electronjs.org"}],"readme":"# @electron/windows-sign [![npm][npm_img]][npm_url]\r\n\r\nCodesign your app for Windows. Made for [Electron][electron] but really supports any folder with binary files. `electron-windows-sign` scans a folder for [signable files](#file-types) and codesigns them with both SHA-1 and SHA-256. It can be highly customized and used either programmatically or on the command line. \r\n\r\nThis tool is particularly useful if you want to code sign Electron or other Windows binaries with an EV certificate or an HSM setup (like DigiCert KeyLocker, AWS CloudHSM, Azure Key Vault HSM, Google Cloud Key Management Service HSM, and other similar services). For more details on how you'd exactly do that, please see [Use with Cloud HSM Providers](#use-with-cloud-hsm-providers) below.\r\n\r\n# Requirements\r\n\r\nBy default, this module spawns `signtool.exe` and needs to run on Windows. If you're building an Electron app and care enough to codesign them, I would heavily recommend that you build and test your apps on the platforms you're building for.\r\n\r\n# Usage\r\n\r\nMost developers of Electron apps will likely not use this module directly - and instead use it indirectly\r\ninstead. If you are one of those developers who is using a module like `@electron/forge` or `@electron/packager`, you can configure this module with global environment variables. If that describes\r\nyou, you can skip ahead to your use case:\r\n\r\n - [With a certificate file and password](#with-a-certificate-file-and-password)\r\n - [With a custom binary or custom parameters](#with-a-custom-signtoolexe-or-custom-parameters)\r\n - [With a completely custom hook](#with-a-custom-hook-function)\r\n\r\n## Direct Usage\r\n\r\n`@electron/windows-codesign` is distributed as an ESM package and can be used both as a module as well as directly from the command line.\r\n\r\n```ts\r\nimport { sign } from \"@electron/windows-sign\"\r\n\r\nawait sign(signOptions)\r\n```\r\n\r\n```ps1\r\nelectron-windows-sign $PATH_TO_APP_DIRECTORY [options ...]\r\n```\r\n\r\n## With a certificate file and password\r\n\r\nThis is the \"traditional\" way to codesign Electron apps on Windows. You pass in a certificate file\r\n(like a .pfx) and a password, which will then be passed to a built-in version of `signtool.exe` taken\r\ndirectly from the Windows SDK. \r\n\r\n```ts\r\nawait sign({\r\n  appDirectory: \"C:\\\\Path\\\\To\\\\App\",\r\n  // or process.env.WINDOWS_CERTIFICATE_FILE\r\n  certificateFile: \"C:\\\\Cert.pfx\",\r\n  // or process.env.WINDOWS_CERTIFICATE_PASSWORD \r\n  certificatePassword: \"hunter99\"\r\n})\r\n```\r\n\r\n```ps1\r\nelectron-windows-sign $PATH_TO_APP_DIRECTORY --certificate-file=$PATH_TO_CERT --certificate-password=$CERT-PASSWORD\r\n```\r\n\r\n### Full configuration\r\n```ts\r\n// Path to a timestamp server. Defaults to http://timestamp.digicert.com\r\n// Can also be passed as process.env.WINDOWS_TIMESTAMP_SERVER\r\ntimestampServer = \"http://timestamp.digicert.com\"\r\n// Description of the signed content. Will be passed to signtool.exe as /d\r\n// Can also be passed as process.env.WINDOWS_SIGN_DESCRIPTION\r\ndescription = \"My content\"\r\n// URL of the signed content. Will be passed to signtool.exe as /du\r\n// Can also be passed as process.env.WINDOWS_SIGN_WEBSITE\r\nwebsite = \"https://mywebsite.com\"\r\n// If enabled, attempt to sign .js JavaScript files. Disabled by default\r\nsignJavaScript = true\r\n// If unspecified, both sha1 and sha256 signatures will be appended. Will be passed to signtool.exe as the /fd option.\r\nhashes = [\"sha256\"]\r\n```\r\n\r\n## With a custom signtool.exe or custom parameters\r\n\r\nSometimes, you need to specify specific signing parameters or use a different version\r\nof `signtool.exe`. In this mode, `@electron/windows-sign` will call the provided binary\r\nwith the provided parameters for each file to sign. \r\n\r\nIf you only provide `signToolPath`, the default parameters will be used.\r\nIf you only provide `signWithParams`, the default `signtool.exe` will be used. \r\n\r\nAll the [additional configuration](#additional-configuration) mentioned above is also\r\navailable here, but only used if you do not provide your own parameters.\r\n\r\n```ts\r\nawait sign({\r\n  appDirectory: \"C:\\\\Path\\\\To\\\\App\",\r\n  // or process.env.WINDOWS_CERTIFICATE_FILE\r\n  certificateFile: \"C:\\\\Cert.pfx\", \r\n  // or process.env.WINDOWS_CERTIFICATE_PASSWORD\r\n  certificatePassword: \"hunter99\",\r\n  // or process.env.WINDOWS_SIGNTOOL_PATH\r\n  signToolPath: \"C:\\\\Path\\\\To\\\\my-custom-tool.exe\",\r\n  // or process.env.WINDOWS_SIGN_WITH_PARAMS\r\n  signWithParams: \"--my=custom --parameters\"\r\n})\r\n```\r\n\r\n```ps1\r\nelectron-windows-sign $PATH_TO_APP_DIRECTORY --sign-tool-path=$PATH_TO_TOOL --sign-with-params=\"--my=custom --parameters\"\r\n```\r\n\r\n## With a custom hook function\r\n\r\nSometimes, you just want all modules depending on `@electron/windows-sign` to call\r\nyour completely custom logic. You can either specify a `hookFunction` (if you're calling\r\nthis module yourself) or a `hookModulePath`, which this module will attempt to require.\r\n\r\nUsing the `hookModulePath` has the benefit that you can override how any other users\r\nof this module (like `@electron/packager`) codesign your app.\r\n\r\n```ts\r\nawait sign({\r\n  // A function with the following signature:\r\n  // (fileToSign: string) => void | Promise<void>\r\n  //\r\n  // This function will be called sequentially for each file that \r\n  // @electron/windows-sign wants to sign.\r\n  hookFunction: myHookFunction\r\n  // Path to a hook module.\r\n  hookModulePath: \"C:\\\\Path\\\\To\\\\my-hook-module.js\",\r\n})\r\n```\r\n\r\nYour hook module should either directly export a function or\r\nexport a `default` function.\r\n```js\r\n// Good:\r\nmodule.exports = function (filePath) {\r\n  console.log(`Path to file to sign: ${filePath}`)\r\n}\r\n\r\n// Good:\r\nmodule.exports = async function (filePath) {\r\n  console.log(`Path to file to sign: ${filePath}`)\r\n}\r\n\r\n// Good:\r\nexport default async function (filePath) {\r\n  console.log(`Path to file to sign: ${filePath}`)\r\n}\r\n\r\n// Bad:\r\nmodule.exports = {\r\n  myCustomHookName: function (filePath) {\r\n    console.log(`Path to file to sign: ${filePath}`)\r\n  }\r\n}\r\n\r\n// Bad:\r\nexport async function myCustomHookName(filePath) {\r\n  console.log(`Path to file to sign: ${filePath}`)\r\n}\r\n```\r\n\r\n```\r\nSYNOPSIS\r\n  electron-windows-sign app [options ...]\r\n\r\nDESCRIPTION\r\n  app\r\n    Path to the application to sign.  It must be a directory.\r\n\r\n  certificate-file\r\n    Path to the certificate file (.pfx) to use for signing. Uses \r\n    environment variable WINDOWS_CERTIFICATE_FILE if not provided.\r\n\r\n  certificate-password\r\n    Password to use for the certificate. Uses environment variable\r\n    WINDOWS_CERTIFICATE_PASSWORD if not provided.\r\n\r\n  sign-tool-path\r\n    Path to the signtool.exe binary.  If not specified, the tool will attempt\r\n    use a built-in version.\r\n\r\n  timestamp-server\r\n    URL of the timestamp server to use.  If not specified, the tool will\r\n    attempt to use a built-in server (http://timestamp.digicert.com)\r\n\r\n  description\r\n    Description to use for the signed files. Passed as /d to signtool.exe.\r\n\r\n  website\r\n    URL of the website to use for the signed files. Passed as /du to\r\n    signtool.exe.\r\n\r\n  sign-with-params\r\n    Additional parameters to pass to signtool.exe.  This can be used to\r\n    specify additional certificates to use for cross-signing.\r\n\r\n  automatically-select-certificate\r\n    Automatically select the best certificate to use for signing. On by default.\r\n\r\n  help\r\n    Print this usage information.\r\n\r\n  debug\r\n    Print additional debug information.\r\n```\r\n\r\n# File Types\r\nThis tool will aggressively attempt to sign all files that _can_\r\nbe signed, excluding scripts.\r\n\r\n- [Portable executable files][pe] (.exe, .dll, .sys, .efi, .scr, .node)\r\n- Microsoft installers (.msi)\r\n- APPX/MSIX packages (.appx, .appxbundle, .msix, .msixbundle)\r\n- Catalog files (.cat)\r\n- Cabinet files (.cab)\r\n- Silverlight applications (.xap)\r\n- Scripts (.vbs, .wsf, .ps1)\r\n\r\nIf you do want to sign JavaScript, please enable it with the `signJavaScript`\r\nparameter. As far as we are aware, there are no benefits to signing\r\nJavaScript files, so we do not by default.\r\n\r\n# Use with Cloud HSM Providers\r\n\r\nSince 2023, Microsoft requires that Windows software be signed with an extended validation (EV) certificate in order to avoid a Windows Defender popup. This presents a challenge for developers who are used to building and signing in the cloud or some continuous integration setup like GitHub Actions, CircleCI, Travis CI, or AppVeyor because EV certificates require a Hardware Security Module (HSM). Or, in simpler words: If you want to code sign your Windows software so that your customers don't see a scary Windows Defender dialog, you need to code sign on a computer with a USB device plugged in. \r\n\r\nThe industry has an answer to this problem: Services like DigiCert KeyLocker, AWS CloudHSM, Azure Key Vault HSM, or Google Cloud Key Management Service HSM allow code signing binaries with an Extended Validation (EV) certificate from the cloud. `@electron/windows-sign` is compatible with all of these services. \r\n\r\n## Custom signtool parameters\r\n\r\nMost services allow signing your code with Microsoft's `signtool.exe`. Let's take DigiCert KeyLocker as an example. [DigiCert's documentation](https://docs.digicert.com/en/digicert-keylocker/signing-tools/sign-authenticode-files-with-signtool-on-windows.html) explains the steps necessary to setup your signing machine. Once done, you can sign with the following call:\r\n\r\n```\r\nsigntool.exe sign /csp \"DigiCert Signing Manager KSP\" /kc <keypair_alias> /f <certificate_file> /tr http://timestamp.digicert.com /td SHA256 /fd SHA256 <file_to_be_signed> \r\n```\r\n\r\nTo sign with `@electron/windows-sign` using those instructions, you would take the parameters and add them to `signWithParams`:\r\n\r\n```js\r\nawait sign({\r\n  signWithParams: \"/csp \\\"DigiCert Signing Manager KSP\\\" /kc <keypair_alias> /f <certificate_file> /tr http://timestamp.digicert.com /td SHA256 /fd SHA256\"\r\n})\r\n```\r\n\r\nBoth Google's and Amazon's solutions similarly allow you to sign with Microsoft's SignTool. Documentation for [Google can be found here](https://cloud.google.com/kms/docs/reference/cng-signtool), [Amazon's lives here](https://docs.aws.amazon.com/cloudhsm/latest/userguide/signtool.html). \r\n\r\n## Custom signtool.exe\r\n\r\nSome providers provide drop-in replacements for `signtool.exe`. If that's the case, simply pass the path to that replacement:\r\n\r\n```ts\r\nawait sign({\r\n  // or process.env.WINDOWS_SIGNTOOL_PATH\r\n  signToolPath: \"C:\\\\Path\\\\To\\\\my-custom-tool.exe\",\r\n})\r\n```\r\n\r\n## Fully custom process\r\n\r\nIf your HSM provider has a more complex setup, you might have to call a custom file with custom parameters. If that's the case, use a hook function or hook module, which allows you to completely customize what to do with each file that `@electron/windows-sign` wants to sign. More documentation about this option can be found in the [\"Signing with a custom hook function\" section above](#with-a-custom-hook-function).\r\n\r\n# License\r\nBSD 2-Clause \"Simplified\". Please see LICENSE for details.\r\n\r\n[electron]: https://github.com/electron/electron\r\n[npm_img]: https://img.shields.io/npm/v/@electron/windows-sign.svg\r\n[npm_url]: https://npmjs.org/package/@electron/windows-sign\r\n[pe]: https://en.wikipedia.org/wiki/Portable_Executable\r\n","readmeFilename":"README.md"}