import time
import hid

def control_relay_correct(device, relay_num, state):
    """
    ƒêi·ªÅu khi·ªÉn relay v·ªõi format ƒë√£ t√¨m ra
    relay_num: 1-4
    state: True=ON, False=OFF
    """
    try:
        if state:
            feature_data = [0x00, 0xFF, relay_num, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00]
            action = "B·∫¨T"
            color = "üî¥"
        else:
            feature_data = [0x00, 0xFD, relay_num, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]
            action = "T·∫ÆT"
            color = "‚ö´"
        
        result = device.send_feature_report(feature_data)
        print(f"{color} {action} Relay {relay_num} - Result: {result} bytes")
        return result > 0
        
    except Exception as e:
        print(f"L·ªói: {e}")
        return False

def turn_off_all_relays(device):
    """T·∫Øt t·∫•t c·∫£ relay b·∫±ng l·ªánh ƒë·∫∑c bi·ªát"""
    try:
        feature_data = [0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]
        result = device.send_feature_report(feature_data)
        print(f"T·∫ÆT T·∫§T C·∫¢ relay - Result: {result} bytes")
        return result > 0
    except Exception as e:
        print(f"L·ªói t·∫Øt t·∫•t c·∫£: {e}")
        return False

def control_relay_bitmask(device, bitmask):
    """
    ƒêi·ªÅu khi·ªÉn relay b·∫±ng bitmask
    bitmask: bit 0=relay1, bit 1=relay2, bit 2=relay3, bit 3=relay4
    V√≠ d·ª•: 0x05 = 0101 = relay 1 v√† 3 b·∫≠t
    """
    try:
        feature_data = [0x00, 0xFF, bitmask, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]
        result = device.send_feature_report(feature_data)
        print(f"Set bitmask 0x{bitmask:02X} - Result: {result} bytes")
        return result > 0
    except Exception as e:
        print(f"L·ªói bitmask: {e}")
        return False

def test_working_loop():
    """Test loop v·ªõi format ƒë√£ ho·∫°t ƒë·ªông"""
    print("K·∫øt n·ªëi USB Relay...")
    
    try:
        device = hid.device()
        device.open(0x16C0, 0x05DF)
        print("ƒê√£ k·∫øt n·ªëi v·ªõi USBRelay4")
        
        print("\n TEST LOOP V·ªöI FORMAT ƒê√öNG")
        print("=" * 60)
        print("Header b·∫≠t: 0xFF, Header t·∫Øt: 0xFD")
        print("Nh·∫•n Ctrl+C ƒë·ªÉ d·ª´ng...")
        
        cycle = 0
        while True:
            cycle += 1
            print(f"\nCycle {cycle}:")
            
            for relay_num in range(1, 5):
                print(f"--- Relay {relay_num} ---")
                
                control_relay_correct(device, relay_num, True)
                time.sleep(1)
                
                control_relay_correct(device, relay_num, False)
                time.sleep(1)
            
            print(f"\nNgh·ªâ 2 gi√¢y...")
            time.sleep(2)
            
    except KeyboardInterrupt:
        print(f"\nD·ª´ng test b·ªüi ng∆∞·ªùi d√πng sau {cycle} cycles")
    except Exception as e:
        print(f"\nL·ªói: {e}")
    finally:
        print(f"\nT·∫Øt t·∫•t c·∫£ relay...")
        turn_off_all_relays(device)
        
        device.close()
        print("ƒê√£ ng·∫Øt k·∫øt n·ªëi")

def test_bitmask_patterns():
    """Test c√°c pattern b·∫±ng bitmask"""
    print("K·∫øt n·ªëi USB Relay...")

    try:
        device = hid.device()
        device.open(0x16C0, 0x05DF)
        print("ƒê√£ k·∫øt n·ªëi v·ªõi USBRelay4")

        print("\nTEST BITMASK PATTERNS")
        print("=" * 60)
        print("Nh·∫•n Ctrl+C ƒë·ªÉ d·ª´ng...")
        
        patterns = [
            (0x01, "Ch·ªâ Relay 1"),      # 0001
            (0x02, "Ch·ªâ Relay 2"),      # 0010  
            (0x04, "Ch·ªâ Relay 3"),      # 0100
            (0x08, "Ch·ªâ Relay 4"),      # 1000
            (0x03, "Relay 1+2"),        # 0011
            (0x0C, "Relay 3+4"),        # 1100
            (0x05, "Relay 1+3"),        # 0101
            (0x0A, "Relay 2+4"),        # 1010
            (0x0F, "T·∫•t c·∫£ relay"),     # 1111
            (0x00, "T·∫Øt t·∫•t c·∫£"),       # 0000
        ]
        
        cycle = 0
        while True:
            cycle += 1
            print(f"\nPattern Cycle {cycle}:")

            for bitmask, description in patterns:
                print(f"\n{description} (0x{bitmask:02X}):")
                control_relay_bitmask(device, bitmask)
                time.sleep(1.5)

            print(f"\nNgh·ªâ 3 gi√¢y...")
            time.sleep(3)
            
    except KeyboardInterrupt:
        print(f"\nD·ª´ng test b·ªüi ng∆∞·ªùi d√πng sau {cycle} cycles")
    except Exception as e:
        print(f"\nL·ªói: {e}")
    finally:
        print(f"\nT·∫Øt t·∫•t c·∫£ relay...")
        turn_off_all_relays(device)
        
        device.close()
        print("ƒê√£ ng·∫Øt k·∫øt n·ªëi")

def test_individual_control():
    """Test ƒëi·ªÅu khi·ªÉn t·ª´ng relay ri√™ng bi·ªát"""
    print("K·∫øt n·ªëi USB Relay...")

    try:
        device = hid.device()
        device.open(0x16C0, 0x05DF)
        print("ƒê√£ k·∫øt n·ªëi v·ªõi USBRelay4")

        print("\nTEST ƒêI·ªÄU KHI·ªÇN T·ª™NG RELAY")
        print("=" * 60)
        print("Format: B·∫≠t=0xFF, T·∫Øt=0xFD")
        
        while True:
            print("\nCH·ªåN RELAY:")
            print("1-4: B·∫≠t relay 1-4")
            print("5-8: T·∫Øt relay 1-4")
            print("9: T·∫Øt t·∫•t c·∫£")
            print("0: Tho√°t")
            
            choice = input("Ch·ªçn (0-9): ").strip()
            
            if choice == "0":
                break
            elif choice in ["1", "2", "3", "4"]:
                relay_num = int(choice)
                print(f"B·∫≠t Relay {relay_num}...")
                control_relay_correct(device, relay_num, True)
            elif choice in ["5", "6", "7", "8"]:
                relay_num = int(choice) - 4
                print(f"T·∫Øt Relay {relay_num}...")
                control_relay_correct(device, relay_num, False)
            elif choice == "9":
                print("T·∫Øt t·∫•t c·∫£ relay...")
                turn_off_all_relays(device)
            else:
                print("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!")
                
    except Exception as e:
        print(f"L·ªói: {e}")
    finally:
        print(f"\nT·∫Øt t·∫•t c·∫£ relay...")
        turn_off_all_relays(device)
        
        device.close()
        print("ƒê√£ ng·∫Øt k·∫øt n·ªëi")

def main():
    """Menu ch√≠nh"""
    print("USB RELAY FINAL WORKING VERSION")
    print("=" * 60)
    print("ƒê√£ t√¨m ra format ƒë√∫ng:")
    print("   ‚Ä¢ B·∫≠t relay: Header 0xFF")
    print("   ‚Ä¢ T·∫Øt relay: Header 0xFD")
    print("   ‚Ä¢ T·∫Øt t·∫•t c·∫£: Header 0xFC")
    print("   ‚Ä¢ Bitmask: Header 0xFF v·ªõi bitmask")
    print()
    print("CH·ªåN TEST:")
    print("1. Loop test (b·∫≠t/t·∫Øt tu·∫ßn t·ª±)")
    print("2. Bitmask patterns (nhi·ªÅu relay c√πng l√∫c)")
    print("3. ƒêi·ªÅu khi·ªÉn th·ªß c√¥ng")
    print("4. Tho√°t")
    
    try:
        choice = input("\nCh·ªçn (1-4): ").strip()
        if choice == "1":
            test_working_loop()
        elif choice == "2":
            test_bitmask_patterns()
        elif choice == "3":
            test_individual_control()
        elif choice == "4":
            print("T·∫°m bi·ªát!")
        else:
            print("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!")

    except KeyboardInterrupt:
        print("\nTho√°t ch∆∞∆°ng tr√¨nh")

if __name__ == "__main__":
    main()
