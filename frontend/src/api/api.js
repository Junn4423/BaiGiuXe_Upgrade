// api.js - Chuy·ªÉn ƒë·ªïi c√°c h√†m Python sang React (JS)
// L∆∞u √Ω: C·∫ßn ch·ªânh s·ª≠a urlApi cho ƒë√∫ng endpoint backend c·ªßa b·∫°n

import { api_BienSo, url_api, url_login_api } from "./url";

const urlApi = url_api; // Thay ƒë·ªïi cho ƒë√∫ng backend
const urlLoginApi = url_login_api;

// -------------------- Authentication helpers --------------------
let authCache = null; // L∆∞u token sau l·∫ßn ƒëƒÉng nh·∫≠p ƒë·∫ßu ti√™n

async function getAuthToken(username = "admin", password = "1") {
  // Lu√¥n l·∫•y token m·ªõi ƒë·ªÉ ƒë·∫£m b·∫£o kh√¥ng b·ªã expired
  console.log("Getting fresh auth token...");

  const payload = {
    txtUserName: username,
    txtPassword: password,
  };

  const res = await fetch(urlLoginApi, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload),
  });

  if (!res.ok) {
    throw new Error("Kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p ƒë·ªÉ l·∫•y token");
  }

  authCache = await res.json();
  console.log("Got auth token:", authCache);
  return authCache;
}

async function getAuthHeaders() {
  const authData = await getAuthToken();
  return {
    "Content-Type": "application/json",
    "X-USER-CODE": authData.code,
    "X-USER-TOKEN": authData.token,
  };
}

async function callApiWithAuth(payload) {
  console.log("Calling API with auth:", payload);
  const headers = await getAuthHeaders();
  console.log("Using headers:", headers);

  const res = await fetch(urlApi, {
    method: "POST",
    headers,
    body: JSON.stringify(payload),
  });

  const result = await handleApiResponse(res);
  console.log("API response:", result);
  return result;
}

function handleApiResponse(response) {
  if (!response.ok) {
    console.error("API response not ok:", response.status, response.statusText);
    throw new Error(`Network response was not ok: ${response.status}`);
  }

  return response.json().then((data) => {
    console.log("Raw API response:", data);

    if (typeof data === "object" && data.success === false) {
      throw new Error(data.message || "API error");
    }
    return data;
  });
}

// -------------------- API Functions --------------------

export async function layALLLoaiPhuongTien() {
  const payload = { table: "pm_nc0001", func: "data" };
  return callApiWithAuth(payload);
}

export async function themLoaiPhuongTien(loaiPhuongTien) {
  const payload = {
    table: "pm_nc0001",
    func: "add",
    maLoaiPT: loaiPhuongTien.maLoaiPT,
    tenLoaiPT: loaiPhuongTien.tenLoaiPT,
    moTa: loaiPhuongTien.moTa,
    loaiXe: loaiPhuongTien.loaiXe, 
  };
  return callApiWithAuth(payload);
}
// C·∫≠p nh·∫≠t lo·∫°i ph∆∞∆°ng ti·ªán
export async function capNhatLoaiPhuongTien(loaiPhuongTien) {
  const payload = {
    table: "pm_nc0001",
    func: "edit",
    maLoaiPT: loaiPhuongTien.maLoaiPT,
    tenLoaiPT: loaiPhuongTien.tenLoaiPT,
    moTa: loaiPhuongTien.moTa,
    loaiXe: loaiPhuongTien.loaiXe, 
  };
  return callApiWithAuth(payload);
}

// X√≥a lo·∫°i ph∆∞∆°ng ti·ªán
export async function xoaLoaiPhuongTien(maLoaiPT) {
  const payload = { table: "pm_nc0001", func: "delete", maLoaiPT };
  return callApiWithAuth(payload);
}

export async function layDanhSachCamera() {
  const payload = { table: "pm_nc0006_1", func: "data" };
  return callApiWithAuth(payload);
}

export async function themCamera(camera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "add",
    maCamera: camera.maCamera,
    tenCamera: camera.tenCamera,
    loaiCamera: camera.loaiCamera,
    chucNangCamera: camera.chucNangCamera,
    maKhuVuc: camera.maKhuVuc,
    linkRTSP: camera.linkRTSP,
  };
  return callApiWithAuth(payload);
}

export async function capNhatCamera(camera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "edit",
    maCamera: camera.maCamera,
    tenCamera: camera.tenCamera,
    loaiCamera: camera.loaiCamera,
    chucNangCamera: camera.chucNangCamera,
    maKhuVuc: camera.maKhuVuc,
    linkRTSP: camera.linkRTSP,
  };
  return callApiWithAuth(payload);
}

export async function xoaCamera(maCamera) {
  const payload = { table: "pm_nc0006_1", func: "delete", maCamera };
  return callApiWithAuth(payload);
}

// --- Th√™m c√°c h√†m API c√≤n l·∫°i chuy·ªÉn t·ª´ Python sang JS ---

export async function layALLPhienGuiXe() {
  const payload = { table: "pm_nc0009", func: "data" };
  return callApiWithAuth(payload);
}

export async function themPhienGuiXe(session) {
  const payload = {
    table: "pm_nc0009",
    func: "add",
    uidThe: session.uidThe,
    bienSo: session.bienSo || "",
    chinhSach: session.chinhSach,
    congVao: session.congVao,
    gioVao: session.gioVao,
    anhVao: session.anhVao || "",
    anhMatVao: session.anhMatVao || "",
    trangThai: session.trangThai || "TRONG_BAI",
    camera_id: session.camera_id,
    plate_match: session.plate_match || 0,
    plate: session.plate || "",
  };

  // Ki·ªÉm tra lo·∫°i xe ƒë·ªÉ x·ª≠ l√Ω v·ªã tr√≠ g·ª≠i
  // loaiXe = "0": kh√¥ng c·∫ßn v·ªã tr√≠ g·ª≠i (xe m√°y, xe ƒë·∫°p, ...)
  // loaiXe = "1": y√™u c·∫ßu v·ªã tr√≠ g·ª≠i (√¥ t√¥, xe t·∫£i, ...)
  if (session.loaiXe === "1" || session.loaiXe === 1) {
    // Ch·ªâ th√™m viTriGui khi loaiXe = 1 V√Ä c√≥ d·ªØ li·ªáu viTriGui
    if (session.viTriGui !== undefined && session.viTriGui !== null) {
      payload.viTriGui = session.viTriGui;
      console.log("Lo·∫°i xe = 1: Y√™u c·∫ßu v·ªã tr√≠ g·ª≠i:", session.viTriGui);
    } else {
      console.log("Lo·∫°i xe = 1: Kh√¥ng c√≥ v·ªã tr√≠ g·ª≠i ƒë∆∞·ª£c cung c·∫•p");
    }
  } else if (session.loaiXe === "0" || session.loaiXe === 0) {
    // Lo·∫°i xe = 0: kh√¥ng c·∫ßn v·ªã tr√≠ g·ª≠i, kh√¥ng th√™m field viTriGui v√†o payload
    console.log("Lo·∫°i xe = 0: Kh√¥ng c·∫ßn v·ªã tr√≠ g·ª≠i");
  } else {
    // Tr∆∞·ªùng h·ª£p kh√¥ng x√°c ƒë·ªãnh loaiXe, kh√¥ng th√™m viTriGui
    console.log("Lo·∫°i xe kh√¥ng x√°c ƒë·ªãnh, kh√¥ng th√™m v·ªã tr√≠ g·ª≠i");
  }

  // Remove undefined/null values to avoid API issues
  Object.keys(payload).forEach((key) => {
    if (payload[key] === undefined || payload[key] === null) {
      delete payload[key];
    }
  });

  console.log("üì§ Sending themPhienGuiXe payload:", payload);
  console.log(
    "üîç Lo·∫°i xe:",
    session.loaiXe,
    "| V·ªã tr√≠ g·ª≠i:",
    payload.viTriGui || "Kh√¥ng c√≥"
  );
  return callApiWithAuth(payload);
}

export async function capNhatPhienGuiXe(session) {
  const payload = {
    table: "pm_nc0009",
    func: "edit",
    maPhien: session.maPhien,
    congRa: session.congRa,
    gioRa: session.gioRa,
    anhRa: session.anhRa,
    anhMatRa: session.anhMatRa,
    camera_id: session.camera_id,
    plate_match: session.plate_match,
    plate: session.plate,
  };
  return callApiWithAuth(payload);
}

export async function loadPhienGuiXeTheoMaThe(maThe) {
  const payload = {
    table: "pm_nc0009",
    func: "layPhienGuiXeTuUID",
    uidThe: maThe,
  };
  return callApiWithAuth(payload);
}

export async function loadPhienGuiXeTheoMaThe_XeRa(maThe) {
  const payload = {
    table: "pm_nc0009",
    func: "layPhienGuiXeTuUID_Da_Ra",
    uidThe: maThe,
  };
  return callApiWithAuth(payload);
}

export async function taoBangChoPhienLamViec() {
  const payload = { table: "pm_nc0009", func: "taoBangChoPhienLamViec" };
  return callApiWithAuth(payload);
}

// export async function tinhPhiGuiXe(maPhien) {
//   const payload = { table: "pm_nc0008", func: "tinhPhiGuiXe", maPhien };
//   return callApiWithAuth(payload);
// }

export async function layChinhSachGiaTheoLoaiPT(maLoaiPT) {
  const payload = { table: "pm_nc0008", func: "layChinhSachTuPT", maLoaiPT };
  return callApiWithAuth(payload);
}

export async function themThe(uidThe, loaiThe, trangThai = "1") {
  // Wrapper function for backward compatibility
  return themTheRFID({ uidThe, loaiThe, trangThai });
}

// -------------------- Pricing Policy Functions --------------------
export async function layALLChinhSachGia() {
  const payload = { table: "pm_nc0008", func: "getAllPolicies" };
  const res = await callApiWithAuth(payload);
  return res.data || [];
}
// Alias for backward compatibility: original import in RfidManagerDialogClean.jsx expects layChinhSachGia
export { layALLChinhSachGia as layChinhSachGia };

// Additional aliases for RFID card functions used in RfidManagerDialogClean.jsx
export { capNhatTheRFID as capNhatThe };
export { xoaTheRFID as xoaThe };

export async function themChinhSachGia(chinhSach) {
  console.log("themChinhSachGia called with:", chinhSach);
  const payload = {
    table: "pm_nc0008",
    func: "createPolicy",
    policyData: chinhSach,
  };
  return callApiWithAuth(payload);
}

export async function capNhatChinhSachGia(maChinhSach, chinhSach) {
  console.log("capNhatChinhSachGia called with:", maChinhSach, chinhSach);
  const payload = {
    table: "pm_nc0008",
    func: "updatePolicy",
    policyId: maChinhSach,
    policyData: chinhSach,
  };
  return callApiWithAuth(payload);
}

export async function xoaChinhSachGia(maChinhSach) {
  console.log("xoaChinhSachGia called with:", maChinhSach);
  const payload = {
    table: "pm_nc0008",
    func: "deletePolicy",
    policyId: maChinhSach,
  };
  return callApiWithAuth(payload);
}

//lay danh sach cong
export async function layDanhSachCong() {
  const payload = { table: "pm_nc0007", func: "data" };
  return callApiWithAuth(payload);
}

// -------------------- Zone Management Functions --------------------
export async function layDanhSachKhuVuc() {
  const payload = { table: "pm_nc0004_2", func: "data" };
  return callApiWithAuth(payload);
}

export async function themKhuVuc(khuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "add",
    maKhuVuc: khuVuc.maKhuVuc,
    tenKhuVuc: khuVuc.tenKhuVuc,
    moTa: khuVuc.moTa || "",
  };
  return callApiWithAuth(payload);
}

export async function capNhatKhuVuc(khuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "edit",
    maKhuVuc: khuVuc.maKhuVuc,
    tenKhuVuc: khuVuc.tenKhuVuc,
    moTa: khuVuc.moTa,
  };
  return callApiWithAuth(payload);
}

export async function xoaKhuVuc(maKhuVuc) {
  const payload = { table: "pm_nc0004_2", func: "delete", maKhuVuc };
  return callApiWithAuth(payload);
}

export async function layDanhSachKhu() {
  const payload = { table: "pm_nc0004_1", func: "khu_vuc_camera_cong" };
  return callApiWithAuth(payload);
}

// --- B·ªï sung c√°c h√†m API c√≤n thi·∫øu t·ª´ Python sang JS ---

export async function xoaPhienGuiXe(maPhien) {
  const payload = { table: "pm_nc0009", func: "delete", maPhien };
  return callApiWithAuth(payload);
}

// Force refresh auth token - ƒë·ªÉ g·ªçi khi c·∫ßn l√†m m·ªõi token
export async function refreshAuthToken() {
  console.log("Forcing auth token refresh...");
  authCache = null; // Clear cache
  return await getAuthToken();
}

// -------------------- RFID Card Management Functions --------------------

/**
 * L·∫•y danh s√°ch t·∫•t c·∫£ th·∫ª RFID
 * @returns {Promise<Array>} Danh s√°ch th·∫ª RFID
 */
export async function layDanhSachThe() {
  const payload = { table: "pm_nc0003", func: "data" };
  return callApiWithAuth(payload);
}

/**
 * Th√™m th·∫ª RFID m·ªõi
 * @param {Object} theRFID - Th√¥ng tin th·∫ª RFID
 * @param {string} theRFID.uidThe - UID c·ªßa th·∫ª
 * @param {string} theRFID.loaiThe - Lo·∫°i th·∫ª
 * @param {string} theRFID.trangThai - Tr·∫°ng th√°i th·∫ª (m·∫∑c ƒë·ªãnh: "1")
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m th·∫ª
 */
export async function themTheRFID(theRFID) {
  const payload = {
    table: "pm_nc0003",
    func: "add",
    uidThe: theRFID.uidThe,
    loaiThe: theRFID.loaiThe,
    trangThai: theRFID.trangThai || "1",
    // ngayPhatHanh s·∫Ω ƒë∆∞·ª£c set t·ª± ƒë·ªông ·ªü backend
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t th·∫ª RFID
 * @param {Object} theRFID - Th√¥ng tin th·∫ª RFID c·∫ßn c·∫≠p nh·∫≠t
 * @param {string} theRFID.uidThe - UID c·ªßa th·∫ª
 * @param {string} theRFID.loaiThe - Lo·∫°i th·∫ª
 * @param {string} theRFID.trangThai - Tr·∫°ng th√°i th·∫ª
 * @param {string} [theRFID.ngayPhatHanh] - Ng√†y ph√°t h√†nh (optional)
 * @param {string} [theRFID.bienSoXe] - Bi·ªÉn s·ªë xe (optional)
 * @param {string} [theRFID.maChinhSach] - M√£ ch√≠nh s√°ch (optional)
 * @param {string} [theRFID.ngayKetThucCS] - Ng√†y k·∫øt th√∫c ch√≠nh s√°ch (optional)
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatTheRFID(theRFID) {
  const payload = {
    table: "pm_nc0003",
    func: "edit",
    uidThe: theRFID.uidThe,
    loaiThe: theRFID.loaiThe,
    trangThai: theRFID.trangThai,
    ngayPhatHanh: theRFID.ngayPhatHanh,
    bienSoXe: theRFID.bienSoXe,
    maChinhSach: theRFID.maChinhSach,
    ngayKetThucCS: theRFID.ngayKetThucCS,
  };
  return callApiWithAuth(payload);
}

/**
 * T√¨m th·∫ª ƒëang c√≥ phi√™n g·ª≠i xe
 * @param {string} uidThe - UID c·ªßa th·∫ª
 * @returns {Promise<Array>} Th√¥ng tin th·∫ª v√† phi√™n g·ª≠i xe
 */
export async function timTheDangCoPhien(uidThe) {
  const payload = {
    table: "pm_nc0003",
    func: "timTheDangCoPhien",
    uidThe: uidThe,
  };
  return callApiWithAuth(payload);
}

/**
 * X√≥a th·∫ª RFID
 * @param {string} uidThe - UID c·ªßa th·∫ª RFID c·∫ßn x√≥a
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a th·∫ª
 */
export async function xoaTheRFID(uidThe) {
  const payload = {
    table: "pm_nc0003",
    func: "delete",
    uidThe: uidThe,
  };
  return callApiWithAuth(payload);
}

// -------------------- License Plate Recognition API --------------------

/**
 * G·ª≠i ·∫£nh bi·ªÉn s·ªë l√™n API nh·∫≠n d·∫°ng
 * @param {Blob|File} imageBlob - ·∫¢nh bi·ªÉn s·ªë d·∫°ng Blob ho·∫∑c File
 * @returns {Promise<Object>} - K·∫øt qu·∫£ nh·∫≠n d·∫°ng bi·ªÉn s·ªë
 */
export async function nhanDangBienSo(imageBlob) {
  try {
    console.log("üöó B·∫Øt ƒë·∫ßu nh·∫≠n d·∫°ng bi·ªÉn s·ªë...", {
      blob: imageBlob,
      type: imageBlob.type,
      size: imageBlob.size,
      name: imageBlob.name || "license_plate.jpg",
    });

    // Ch·ªâ s·ª≠ d·ª•ng FormData method v√¨ server kh√¥ng h·ªó tr·ª£ Base64
    return await nhanDangBienSoFormData(imageBlob);
  } catch (error) {
    console.error("‚ùå L·ªói nh·∫≠n d·∫°ng bi·ªÉn s·ªë:", error);
    throw new Error(`Kh√¥ng th·ªÉ nh·∫≠n d·∫°ng bi·ªÉn s·ªë: ${error.message}`);
  }
}

/**
 * G·ª≠i ·∫£nh bi·ªÉn s·ªë l√™n API nh·∫≠n d·∫°ng (ph∆∞∆°ng ph√°p FormData)
 * @param {Blob|File} imageBlob - ·∫¢nh bi·ªÉn s·ªë d·∫°ng Blob ho·∫∑c File
 * @returns {Promise<Object>} - K·∫øt qu·∫£ nh·∫≠n d·∫°ng bi·ªÉn s·ªë
 */
async function nhanDangBienSoFormData(imageBlob) {
  console.log("üì§ Trying FormData method...");

  // T·∫°o FormData ƒë·ªÉ g·ª≠i file - kh·ªõp v·ªõi Postman
  const formData = new FormData();

  // ƒê·∫£m b·∫£o file c√≥ ƒë√∫ng ƒë·ªãnh d·∫°ng nh∆∞ Postman
  const file = new File([imageBlob], "license_plate.jpg", {
    type: "image/jpeg",
    lastModified: Date.now(),
  });

  // API server mong ƒë·ª£i field t√™n l√† 'file' ch·ª© kh√¥ng ph·∫£i 'image'
  formData.append("file", file);

  // Log FormData ƒë·ªÉ debug
  console.log("üì§ FormData entries:");
  for (const [key, value] of formData.entries()) {
    console.log(
      `  ${key}:`,
      value instanceof File
        ? {
            name: value.name,
            type: value.type,
            size: value.size,
          }
        : value
    );
  }

  const response = await fetch(api_BienSo, {
    method: "POST",
    body: formData,
    // Kh√¥ng set Content-Type ƒë·ªÉ browser t·ª± ƒë·ªông th√™m boundary cho multipart/form-data
  });

  console.log("üì° Response status (FormData):", response.status);
  console.log(
    "üì° Response headers:",
    Object.fromEntries(response.headers.entries())
  );

  if (!response.ok) {
    // Log response text ƒë·ªÉ debug l·ªói 422
    const errorText = await response.text();
    console.error("‚ùå API Error Response (FormData):", errorText);
    throw new Error(
      `HTTP error! status: ${response.status}, message: ${errorText}`
    );
  }

  const result = await response.json();
  console.log("‚úÖ K·∫øt qu·∫£ nh·∫≠n d·∫°ng bi·ªÉn s·ªë (FormData):", result);
  return result;
}

/**
 * Convert blob/file to base64 string (utility function)
 * @param {Blob|File} blob - File blob
 * @returns {Promise<string>} - base64 string
 */
export function blobToBase64(blob) {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.onload = () => resolve(reader.result);
    reader.onerror = reject;
    reader.readAsDataURL(blob);
  });
}

// -------------------- Card History Management Functions --------------------
/**
 * L·∫•y nh·∫≠t k√Ω theo th·∫ª t·ª´ b·∫£ng pm_nc0010
 * @param {string} maThe - M√£ th·∫ª RFID
 * @param {string} ngay - Ng√†y theo ƒë·ªãnh d·∫°ng dd-mm-yyyy, ho·∫∑c "all" cho t·∫•t c·∫£
 * @returns {Promise<Object>} Nh·∫≠t k√Ω phi√™n g·ª≠i xe
 */
export async function layNhatKyTheoThe(maThe, ngay = "all") {
  const payload = {
    table: "pm_nc0010",
    func: "layNhatKyTheoThe",
    maThe: maThe,
    ngay: ngay,
  };
  return callApiWithAuth(payload);
}

// -------------------- Vehicle Search Functions --------------------
/**
 * T√¨m phi√™n g·ª≠i xe theo bi·ªÉn s·ªë
 * @param {string} bienSo - Bi·ªÉn s·ªë xe
 * @returns {Promise<Array>} Danh s√°ch phi√™n g·ª≠i xe
 */
export async function timPhienTheoBienSo(bienSo) {
  const payload = {
    table: "pm_nc0009",
    func: "timPhienTheoBienSo",
    bienSo: bienSo,
  };
  return callApiWithAuth(payload);
}

// -------------------- Extended Parking Session Functions --------------------
/**
 * C·∫≠p nh·∫≠t tr·∫°ng th√°i phi√™n g·ª≠i xe th√†nh "ƒêANG G·ª¨I"
 * @param {string} maPhien - M√£ phi√™n g·ª≠i xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatTrangThaiDangGui(maPhien) {
  const payload = {
    table: "pm_nc0009",
    func: "edit_TrangThai",
    maPhien: maPhien,
  };
  return callApiWithAuth(payload);
}

// -------------------- Gate Management Functions --------------------
/**
 * Th√™m c·ªïng m·ªõi
 * @param {Object} cong - Th√¥ng tin c·ªïng
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m c·ªïng
 */
export async function themCong(cong) {
  const payload = {
    table: "pm_nc0007",
    func: "add",
    maCong: cong.maCong,
    tenCong: cong.tenCong,
    loaiCong: cong.loaiCong,
    viTriLapDat: cong.viTriLapDat,
    maKhuVuc: cong.maKhuVuc,
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t th√¥ng tin c·ªïng
 * @param {Object} cong - Th√¥ng tin c·ªïng
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatCong(cong) {
  const payload = {
    table: "pm_nc0007",
    func: "edit",
    maCong: cong.maCong,
    tenCong: cong.tenCong,
    loaiCong: cong.loaiCong,
    viTriLapDat: cong.viTriLapDat,
    maKhuVuc: cong.maKhuVuc,
  };
  return callApiWithAuth(payload);
}

/**
 * X√≥a c·ªïng
 * @param {string} maCong - M√£ c·ªïng
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaCong(maCong) {
  const payload = {
    table: "pm_nc0007",
    func: "delete",
    maCong: maCong,
  };
  return callApiWithAuth(payload);
}

// -------------------- Extended Camera Functions --------------------
/**
 * C·∫≠p nh·∫≠t URL RTSP c·ªßa camera
 * @param {string} maCamera - M√£ camera
 * @param {string} rtspUrl - URL RTSP m·ªõi
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatRTSPCamera(maCamera, rtspUrl) {
  const payload = {
    table: "pm_nc0006_2",
    func: "updateUrl",
    id: maCamera,
    data: { rtsp_url: rtspUrl },
  };
  return callApiWithAuth(payload);
}

// -------------------- Extended Zone Functions --------------------
/**
 * L·∫•y th√¥ng tin khu v·ª±c theo m√£
 * @param {string} maKhuVuc - M√£ khu v·ª±c
 * @returns {Promise<Object>} Th√¥ng tin khu v·ª±c
 */
export async function layKhuVucTheoMa(maKhuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "getById",
    maKhuVuc: maKhuVuc,
  };
  return callApiWithAuth(payload);
}

// -------------------- Parking Spot Management Functions --------------------
/**
 * L·∫•y danh s√°ch ch·ªó ƒë·ªó xe
 * @returns {Promise<Array>} Danh s√°ch ch·ªó ƒë·ªó xe
 */
export async function layDanhSachChoDo() {
  const payload = { table: "pm_nc0005", func: "data" };
  return callApiWithAuth(payload);
}

/**
 * Th√™m ch·ªó ƒë·ªó xe m·ªõi
 * @param {Object} choDo - Th√¥ng tin ch·ªó ƒë·ªó xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m ch·ªó ƒë·ªó xe
 */
export async function themChoDo(choDo) {
  const payload = {
    table: "pm_nc0005",
    func: "add",
    maChoDo: choDo.maChoDo,
    maKhuVuc: choDo.maKhuVuc,
    trangThai: choDo.trangThai || "TRONG",
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t th√¥ng tin ch·ªó ƒë·ªó xe
 * @param {Object} choDo - Th√¥ng tin ch·ªó ƒë·ªó xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatChoDo(choDo) {
  const payload = {
    table: "pm_nc0005",
    func: "edit",
    maChoDo: choDo.maChoDo,
    maKhuVuc: choDo.maKhuVuc,
    trangThai: choDo.trangThai,
  };
  return callApiWithAuth(payload);
}

/**
 * X√≥a ch·ªó ƒë·ªó xe
 * @param {string} maChoDo - M√£ ch·ªó ƒë·ªó xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaChoDo(maChoDo) {
  const payload = {
    table: "pm_nc0005",
    func: "delete",
    maChoDo: maChoDo,
  };
  return callApiWithAuth(payload);
}

/**
 * L·∫•y danh s√°ch ch·ªó ƒë·ªó xe theo khu v·ª±c
 * @param {string} maKhuVuc - M√£ khu v·ª±c
 * @returns {Promise<Array>} Danh s√°ch ch·ªó ƒë·ªó xe trong khu v·ª±c
 */
export async function layChoDauXeTheoKhu(maKhuVuc) {
  const payload = {
    table: "pm_nc0005",
    func: "loadChoDauXeTheoKhu",
    maKhuVuc: maKhuVuc,
  };
  return callApiWithAuth(payload);
}

/**
 * ƒê·ªìng b·ªô h√≥a tr·∫°ng th√°i ch·ªó ƒë·ªó xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ ƒë·ªìng b·ªô
 */
export async function dongBoTrangThaiChoDo() {
  const payload = {
    table: "pm_nc0005",
    func: "sync_data",
  };
  return callApiWithAuth(payload);
}

/**
 * Thay ƒë·ªïi tr·∫°ng th√°i ch·ªó ƒë·ªó
 * @param {string} maChoDo - M√£ ch·ªó ƒë·ªó
 * @param {string} trangThai - Tr·∫°ng th√°i m·ªõi (0/1)
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatTrangThaiChoDo(maChoDo, trangThai) {
  const payload = {
    table: "pm_nc0005",
    func: "chinhSuaTrangThai",
    maChoDo: maChoDo,
    trangThai: trangThai,
  };
  return callApiWithAuth(payload);
}

// -------------------- Vehicle Management Functions --------------------
/**
 * L·∫•y danh s√°ch ph∆∞∆°ng ti·ªán
 * @returns {Promise<Array>} Danh s√°ch ph∆∞∆°ng ti·ªán
 */
export async function layDanhSachPhuongTien() {
  const payload = { table: "pm_nc0002", func: "data" };
  return callApiWithAuth(payload);
}

/**
 * Th√™m ph∆∞∆°ng ti·ªán m·ªõi
 * @param {Object} phuongTien - Th√¥ng tin ph∆∞∆°ng ti·ªán
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m ph∆∞∆°ng ti·ªán
 */
export async function themPhuongTien(phuongTien) {
  const payload = {
    table: "pm_nc0002",
    func: "add",
    bienSo: phuongTien.bienSo,
    maLoaiPT: phuongTien.maLoaiPT,
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t th√¥ng tin ph∆∞∆°ng ti·ªán
 * @param {Object} phuongTien - Th√¥ng tin ph∆∞∆°ng ti·ªán
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatPhuongTien(phuongTien) {
  const payload = {
    table: "pm_nc0002",
    func: "edit",
    bienSo: phuongTien.bienSo,
    maLoaiPT: phuongTien.maLoaiPT,
  };
  return callApiWithAuth(payload);
}

/**
 * X√≥a ph∆∞∆°ng ti·ªán
 * @param {string} bienSo - Bi·ªÉn s·ªë xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaPhuongTien(bienSo) {
  const payload = {
    table: "pm_nc0002",
    func: "delete",
    bienSo: bienSo,
  };
  return callApiWithAuth(payload);
}

// -------------------- Enhanced Pricing Policy Functions --------------------
/**
 * L·∫•y danh s√°ch ch√≠nh s√°ch gi√° theo table pm_nc0008 t·ª´ ngocchung.php
 * @returns {Promise<Array>} Danh s√°ch ch√≠nh s√°ch gi√°
 */
export async function layDanhSachChinhSachGia() {
  const payload = { table: "pm_nc0008", func: "data" };
  return callApiWithAuth(payload);
}

/**
 * Th√™m ch√≠nh s√°ch gi√° m·ªõi (t·ª´ kebao.php)
 * @param {Object} chinhSach - Th√¥ng tin ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m ch√≠nh s√°ch
 */
export async function themChinhSachGiaKebao(chinhSach) {
  const payload = {
    table: "pm_nc0008",
    func: "add",
    maChinhSach: chinhSach.maChinhSach,
    maLoaiPT: chinhSach.maLoaiPT,
    thoiGian: chinhSach.thoiGian,
    donGia: chinhSach.donGia,
    quaGio: chinhSach.quaGio,
    donGiaQuaGio: chinhSach.donGiaQuaGio,
    loaiChinhSach: chinhSach.loaiChinhSach,
    tongNgay: chinhSach.tongNgay,
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t ch√≠nh s√°ch gi√° (t·ª´ kebao.php)
 * @param {Object} chinhSach - Th√¥ng tin ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatChinhSachGiaKebao(chinhSach) {
  const payload = {
    table: "pm_nc0008",
    func: "edit",
    maChinhSach: chinhSach.maChinhSach,
    maLoaiPT: chinhSach.maLoaiPT,
    thoiGian: chinhSach.thoiGian,
    donGia: chinhSach.donGia,
    quaGio: chinhSach.quaGio,
    donGiaQuaGio: chinhSach.donGiaQuaGio,
    loaiChinhSach: chinhSach.loaiChinhSach,
    tongNgay: chinhSach.tongNgay,
  };
  return callApiWithAuth(payload);
}

/**
 * X√≥a ch√≠nh s√°ch gi√° (t·ª´ kebao.php)
 * @param {string} maChinhSach - M√£ ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaChinhSachGiaKebao(maChinhSach) {
  const payload = {
    table: "pm_nc0008",
    func: "delete",
    maChinhSach: maChinhSach,
  };
  return callApiWithAuth(payload);
}

// -------------------- Camera Management Functions (kebao.php) --------------------
/**
 * L·∫•y danh s√°ch camera t·ª´ kebao.php
 * @returns {Promise<Array>} Danh s√°ch camera
 */
export async function layDanhSachCameraKebao() {
  const payload = { table: "pm_nc0006_1", func: "data" };
  return callApiWithAuth(payload);
}

/**
 * Th√™m camera m·ªõi (t·ª´ kebao.php)
 * @param {Object} camera - Th√¥ng tin camera
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m camera
 */
export async function themCameraKebao(camera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "add",
    maCamera: camera.maCamera,
    tenCamera: camera.tenCamera,
    loaiCamera: camera.loaiCamera,
    chucNangCamera: camera.chucNangCamera,
    maKhuVuc: camera.maKhuVuc,
    linkRTSP: camera.linkRTSP,
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t camera (t·ª´ kebao.php)
 * @param {Object} camera - Th√¥ng tin camera
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatCameraKebao(camera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "edit",
    maCamera: camera.maCamera,
    tenCamera: camera.tenCamera,
    loaiCamera: camera.loaiCamera,
    chucNangCamera: camera.chucNangCamera,
    maKhuVuc: camera.maKhuVuc,
    linkRTSP: camera.linkRTSP,
  };
  return callApiWithAuth(payload);
}

/**
 * X√≥a camera (t·ª´ kebao.php)
 * @param {string} maCamera - M√£ camera
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaCameraKebao(maCamera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "delete",
    maCamera: maCamera,
  };
  return callApiWithAuth(payload);
}

// -------------------- Gate Management Functions (kebao.php) --------------------
/**
 * L·∫•y danh s√°ch c·ªïng t·ª´ kebao.php (pm_nc0007)
 * @returns {Promise<Array>} Danh s√°ch c·ªïng
 */
export async function layDanhSachCongKebao() {
  const payload = { table: "pm_nc0007", func: "data" };
  return callApiWithAuth(payload);
}

/**
 * Th√™m c·ªïng m·ªõi (t·ª´ kebao.php)
 * @param {Object} cong - Th√¥ng tin c·ªïng
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m c·ªïng
 */
export async function themCongKebao(cong) {
  const payload = {
    table: "pm_nc0007",
    func: "add",
    maCong: cong.maCong,
    tenCong: cong.tenCong,
    loaiCong: cong.loaiCong,
    viTriLapDat: cong.viTriLapDat,
    maKhuVuc: cong.maKhuVuc,
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t c·ªïng (t·ª´ kebao.php)
 * @param {Object} cong - Th√¥ng tin c·ªïng
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatCongKebao(cong) {
  const payload = {
    table: "pm_nc0007",
    func: "edit",
    maCong: cong.maCong,
    tenCong: cong.tenCong,
    loaiCong: cong.loaiCong,
    viTriLapDat: cong.viTriLapDat,
    maKhuVuc: cong.maKhuVuc,
  };
  return callApiWithAuth(payload);
}

/**
 * X√≥a c·ªïng (t·ª´ kebao.php)
 * @param {string} maCong - M√£ c·ªïng
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaCongKebao(maCong) {
  const payload = {
    table: "pm_nc0007",
    func: "delete",
    maCong: maCong,
  };
  return callApiWithAuth(payload);
}

// -------------------- Parking Session Functions (kebao.php) --------------------
/**
 * L·∫•y phi√™n g·ª≠i xe theo UID th·∫ª (t·ª´ kebao.php)
 * @param {string} uidThe - UID th·∫ª RFID
 * @returns {Promise<Array>} Danh s√°ch phi√™n g·ª≠i xe
 */
export async function layPhienGuiXeTheoUIDKebao(uidThe) {
  const payload = {
    table: "pm_nc0009",
    func: "layPhienGuiXeTuUID",
    uidThe: uidThe,
  };
  return callApiWithAuth(payload);
}

/**
 * L·∫•y phi√™n g·ª≠i xe ƒë√£ ra theo UID th·∫ª (t·ª´ kebao.php)
 * @param {string} uidThe - UID th·∫ª RFID
 * @returns {Promise<Array>} Danh s√°ch phi√™n g·ª≠i xe ƒë√£ ho√†n th√†nh
 */
export async function layPhienGuiXeDaRaTheoUIDKebao(uidThe) {
  const payload = {
    table: "pm_nc0009",
    func: "layPhienGuiXeTuUID_Da_Ra",
    uidThe: uidThe,
  };
  return callApiWithAuth(payload);
}

/**
 * T√¨m phi√™n g·ª≠i xe theo bi·ªÉn s·ªë (t·ª´ kebao.php)
 * @param {string} bienSo - Bi·ªÉn s·ªë xe
 * @returns {Promise<Array>} Danh s√°ch phi√™n g·ª≠i xe
 */
export async function timPhienTheoBS(bienSo) {
  const payload = {
    table: "pm_nc0009",
    func: "timPhienTheoBienSo",
    bienSo: bienSo,
  };
  return callApiWithAuth(payload);
}

/**
 * T·∫°o b·∫£ng cho phi√™n l√†m vi·ªác (t·ª´ kebao.php)
 * @returns {Promise<Object>} K·∫øt qu·∫£ t·∫°o b·∫£ng
 */
export async function taoBangChoPhienLamViecKebao() {
  const payload = {
    table: "pm_nc0009",
    func: "taoBangChoPhienLamViec",
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t tr·∫°ng th√°i phi√™n g·ª≠i xe (t·ª´ kebao.php)
 * @param {string} maPhien - M√£ phi√™n g·ª≠i xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatTrangThaiPhienKebao(maPhien) {
  const payload = {
    table: "pm_nc0009",
    func: "edit_TrangThai",
    maPhien: maPhien,
  };
  return callApiWithAuth(payload);
}

// -------------------- Zone Management Functions (ngocchung.php) --------------------
/**
 * L·∫•y khu v·ª±c theo ID (t·ª´ ngocchung.php)
 * @param {string} maKhuVuc - M√£ khu v·ª±c
 * @returns {Promise<Object>} Th√¥ng tin khu v·ª±c
 */
export async function layKhuVucTheoID(maKhuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "getById",
    maKhuVuc: maKhuVuc,
  };
  return callApiWithAuth(payload);
}

/**
 * Th√™m khu v·ª±c m·ªõi (t·ª´ ngocchung.php)
 * @param {Object} khuVuc - Th√¥ng tin khu v·ª±c
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m khu v·ª±c
 */
export async function themKhuVucNgocChung(khuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "add",
    maKhuVuc: khuVuc.maKhuVuc,
    tenKhuVuc: khuVuc.tenKhuVuc,
    moTa: khuVuc.moTa,
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t khu v·ª±c (t·ª´ ngocchung.php)
 * @param {Object} khuVuc - Th√¥ng tin khu v·ª±c
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatKhuVucNgocChung(khuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "edit",
    maKhuVuc: khuVuc.maKhuVuc,
    tenKhuVuc: khuVuc.tenKhuVuc,
    moTa: khuVuc.moTa,
  };
  return callApiWithAuth(payload);
}

/**
 * X√≥a khu v·ª±c (t·ª´ ngocchung.php)
 * @param {string} maKhuVuc - M√£ khu v·ª±c
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaKhuVucNgocChung(maKhuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "delete",
    maKhuVuc: maKhuVuc,
  };
  return callApiWithAuth(payload);
}

// -------------------- Camera URL Update Functions (ngocchung.php) --------------------
/**
 * C·∫≠p nh·∫≠t URL RTSP c·ªßa camera (t·ª´ ngocchung.php)
 * @param {string} id - ID camera
 * @param {string} rtspUrl - URL RTSP m·ªõi
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatURLCamera(id, rtspUrl) {
  const payload = {
    table: "pm_nc0006_2",
    func: "updateUrl",
    id: id,
    data: { rtsp_url: rtspUrl },
  };
  return callApiWithAuth(payload);
}

// -------------------- Pricing Policy Functions (ngocchung.php) --------------------
/**
 * L·∫•y t·∫•t c·∫£ ch√≠nh s√°ch gi√° (t·ª´ ngocchung.php)
 * @returns {Promise<Array>} Danh s√°ch ch√≠nh s√°ch gi√°
 */
export async function layTatCaChinhSachGiaNgocChung() {
  const payload = {
    table: "pm_nc0008",
    func: "getAllPolicies",
  };
  return callApiWithAuth(payload);
}

/**
 * T·∫°o ch√≠nh s√°ch gi√° m·ªõi (t·ª´ ngocchung.php)
 * @param {Object} policy - Th√¥ng tin ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ t·∫°o ch√≠nh s√°ch
 */
export async function taoChinhSachGiaNgocChung(policy) {
  const payload = {
    table: "pm_nc0008",
    func: "createPolicy",
    ...policy,
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t ch√≠nh s√°ch gi√° (t·ª´ ngocchung.php)
 * @param {Object} policy - Th√¥ng tin ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatChinhSachGiaNgocChung(policy) {
  const payload = {
    table: "pm_nc0008",
    func: "updatePolicy",
    ...policy,
  };
  return callApiWithAuth(payload);
}

/**
 * X√≥a ch√≠nh s√°ch gi√° (t·ª´ ngocchung.php)
 * @param {string} policyId - ID ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaChinhSachGiaNgocChung(policyId) {
  const payload = {
    table: "pm_nc0008",
    func: "deletePolicy",
    policyId: policyId,
  };
  return callApiWithAuth(payload);
}

/**
 * T√≠nh ph√≠ g·ª≠i xe (t·ª´ ngocchung.php)
 * @param {Object} data - D·ªØ li·ªáu t√≠nh ph√≠
 * @returns {Promise<Object>} K·∫øt qu·∫£ t√≠nh ph√≠
 */
export async function tinhPhiGuiXeNgocChung(data) {
  const payload = {
    table: "pm_nc0008",
    func: "tinhPhiGuiXe",
    ...data,
  };
  return callApiWithAuth(payload);
}

/**
 * L·∫•y ch√≠nh s√°ch t·ª´ ph∆∞∆°ng ti·ªán (t·ª´ ngocchung.php)
 * @param {string} maLoaiPT - M√£ lo·∫°i ph∆∞∆°ng ti·ªán
 * @returns {Promise<Object>} Ch√≠nh s√°ch gi√°
 */
export async function layChinhSachTuPTNgocChung(maLoaiPT) {
  const payload = {
    table: "pm_nc0008",
    func: "layChinhSachTuPT",
    maLoaiPT: maLoaiPT,
  };
  return callApiWithAuth(payload);
}

// -------------------- History Functions (ngocchung.php) --------------------
/**
 * L·∫•y nh·∫≠t k√Ω theo th·∫ª (t·ª´ ngocchung.php)
 * @param {string} uidThe - UID th·∫ª RFID
 * @returns {Promise<Array>} Nh·∫≠t k√Ω th·∫ª
 */
export async function layNhatKyTheoTheNgocChung(uidThe) {
  const payload = {
    table: "pm_nc0010",
    func: "layNhatKyTheoThe",
    uidThe: uidThe,
  };
  return callApiWithAuth(payload);
}

// -------------------- Enhanced RFID Card Functions (t·ª´ mobile app) --------------------

/**
 * Th√™m th·∫ª RFID v·ªõi ƒë·∫ßy ƒë·ªß th√¥ng tin (theo mobile app)
 * @param {string} uidThe - UID th·∫ª RFID
 * @param {string} loaiThe - Lo·∫°i th·∫ª (KHACH, VIP, NHANVIEN)
 * @param {string} trangThai - Tr·∫°ng th√°i th·∫ª (m·∫∑c ƒë·ªãnh: "1")
 * @param {string} bienSoXe - Bi·ªÉn s·ªë xe (optional)
 * @param {string} maChinhSach - M√£ ch√≠nh s√°ch (optional)
 * @param {string} ngayKetThucCS - Ng√†y k·∫øt th√∫c ch√≠nh s√°ch (optional)
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m th·∫ª
 */
export async function themTheMobile(
  uidThe,
  loaiThe,
  trangThai = "1",
  bienSoXe = "",
  maChinhSach = "",
  ngayKetThucCS = ""
) {
  const payload = {
    table: "pm_nc0003",
    func: "add",
    uidThe: uidThe,
    loaiThe: loaiThe,
    trangThai: trangThai,
    bienSoXe: bienSoXe,
    maChinhSach: maChinhSach,
    ngayKetThucCS: ngayKetThucCS,
  };
  return callApiWithAuth(payload);
}

/**
 * L·∫•y th√¥ng tin th·∫ª RFID theo UID (theo mobile app)
 * @param {string} uidThe - UID th·∫ª RFID
 * @returns {Promise<Array>} Th√¥ng tin th·∫ª
 */
export async function layTheRFIDTheoUID(uidThe) {
  const payload = {
    table: "pm_nc0003",
    func: "timTheTuUID",
    uidThe: uidThe,
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t th·∫ª RFID theo mobile app
 * @param {Object} theRFID - Th√¥ng tin th·∫ª RFID
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatTheRFIDMobile(theRFID) {
  const payload = {
    table: "pm_nc0003",
    func: "edit",
    uidThe: theRFID.uidThe,
    loaiThe: theRFID.loaiThe,
    trangThai: theRFID.trangThai,
    bienSoXe: theRFID.bienSoXe || "",
    maChinhSach: theRFID.maChinhSach || "",
    ngayKetThucCS: theRFID.ngayKetThucCS || "",
    // ngayPhatHanh s·∫Ω ƒë∆∞·ª£c gi·ªØ nguy√™n ·ªü backend
  };
  return callApiWithAuth(payload);
}

/**
 * L·∫•y t·∫•t c·∫£ th·∫ª RFID (theo mobile app)
 * @returns {Promise<Array>} Danh s√°ch th·∫ª RFID
 */
export async function layTatCaTheRFID() {
  return layDanhSachThe(); // S·ª≠ d·ª•ng function c√≥ s·∫µn
}

/**
 * L·∫•y th√¥ng tin th·∫ª ƒëang c√≥ xe g·ª≠i (theo mobile app)
 * @param {string} uidThe - UID th·∫ª RFID
 * @returns {Promise<Array>} Th√¥ng tin th·∫ª v√† phi√™n g·ª≠i xe
 */
export async function thongTinTheDangCoXeGui(uidThe) {
  return timTheDangCoPhien(uidThe); // S·ª≠ d·ª•ng function c√≥ s·∫µn
}

// -------------------- Enhanced Pricing Policy Functions (Mobile App Standard) --------------------
/**
 * L·∫•y danh s√°ch t·∫•t c·∫£ ch√≠nh s√°ch gi√° (theo chu·∫©n mobile app)
 * @returns {Promise<Array>} Danh s√°ch ch√≠nh s√°ch gi√°
 */
export async function layAllChinhSach() {
  const payload = { table: "pm_nc0008", func: "data" };
  return callApiWithAuth(payload);
}

/**
 * Th√™m ch√≠nh s√°ch gi√° m·ªõi (theo chu·∫©n mobile app)
 * @param {Object} chinhSach - Th√¥ng tin ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m ch√≠nh s√°ch
 */
export async function themChinhSach(chinhSach) {
  const payload = {
    table: "pm_nc0008",
    func: "add",
    maChinhSach: chinhSach.maChinhSach,
    maLoaiPT: chinhSach.maLoaiPT,
    thoiGian: chinhSach.thoiGian,
    donGia: chinhSach.donGia,
    quaGio: chinhSach.quaGio || 0,
    donGiaQuaGio: chinhSach.donGiaQuaGio || 0,
    loaiChinhSach: chinhSach.loaiChinhSach || "",
    tongNgay: chinhSach.tongNgay || 0,
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t ch√≠nh s√°ch gi√° (theo chu·∫©n mobile app)
 * @param {Object} chinhSach - Th√¥ng tin ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function suaChinhSach(chinhSach) {
  const payload = {
    table: "pm_nc0008",
    func: "edit",
    maChinhSach: chinhSach.maChinhSach,
    maLoaiPT: chinhSach.maLoaiPT,
    thoiGian: chinhSach.thoiGian,
    donGia: chinhSach.donGia,
    quaGio: chinhSach.quaGio || 0,
    donGiaQuaGio: chinhSach.donGiaQuaGio || 0,
    loaiChinhSach: chinhSach.loaiChinhSach || "",
    tongNgay: chinhSach.tongNgay || 0,
  };
  return callApiWithAuth(payload);
}

/**
 * X√≥a ch√≠nh s√°ch gi√° (theo chu·∫©n mobile app)
 * @param {string} maChinhSach - M√£ ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaChinhSach(maChinhSach) {
  const payload = {
    table: "pm_nc0008",
    func: "delete",
    maChinhSach: maChinhSach,
  };
  return callApiWithAuth(payload);
}

/**
 * T√≠nh to√°n ng√†y k·∫øt th√∫c ch√≠nh s√°ch VIP
 * @param {string} startDate - Ng√†y b·∫Øt ƒë·∫ßu (YYYY-MM-DD)
 * @param {number} tongNgay - T·ªïng s·ªë ng√†y
 * @returns {string} Ng√†y k·∫øt th√∫c (YYYY-MM-DD)
 */
export function tinhNgayKetThucChinhSach(startDate, tongNgay) {
  if (!startDate || !tongNgay || tongNgay <= 0) {
    return "";
  }

  const start = new Date(startDate);
  if (isNaN(start.getTime())) {
    return "";
  }

  const endDate = new Date(start);
  endDate.setDate(start.getDate() + tongNgay - 1); // -1 v√¨ bao g·ªìm ng√†y b·∫Øt ƒë·∫ßu

  return endDate.toISOString().split("T")[0]; // Format YYYY-MM-DD
}

/**
 * T·∫°o m√£ ch√≠nh s√°ch t·ª± ƒë·ªông theo c·∫•u h√¨nh
 * @param {string} maLoaiPT - M√£ lo·∫°i ph∆∞∆°ng ti·ªán
 * @param {string} loaiChinhSach - Lo·∫°i ch√≠nh s√°ch (NGAY, THANG, NAM)
 * @param {number} soLuong - S·ªë l∆∞·ª£ng (1 ng√†y, 3 th√°ng, 1 nƒÉm)
 * @returns {string} M√£ ch√≠nh s√°ch t·ª± ƒë·ªông
 */
export function taoMaChinhSachTuDong(maLoaiPT, loaiChinhSach, soLuong) {
  if (!maLoaiPT || !loaiChinhSach || !soLuong) {
    return "";
  }

  // ƒê·ªìng b·ªô v·ªõi mobile app - s·ª≠ d·ª•ng policyType value tr·ª±c ti·∫øp
  const typeCode =
    {
      N: "N", // Ng√†y
      T: "T", // Tu·∫ßn
      Th: "Th", // Th√°ng
      NAM: "NAM", // NƒÉm
    }[loaiChinhSach] || "N";

  const vehicleCode = maLoaiPT.toUpperCase().replace(/\s/g, "_");
  return `CS_${vehicleCode}_${soLuong}${typeCode}`;
}

/**
 * T√≠nh t·ªïng s·ªë ng√†y t·ª´ lo·∫°i ch√≠nh s√°ch v√† s·ªë l∆∞·ª£ng
 * @param {string} loaiChinhSach - Lo·∫°i ch√≠nh s√°ch (NGAY, THANG, NAM)
 * @param {number} soLuong - S·ªë l∆∞·ª£ng
 * @returns {number} T·ªïng s·ªë ng√†y
 */
export function tinhTongNgay(loaiChinhSach, soLuong) {
  // ƒê·ªìng b·ªô v·ªõi mobile app
  const multiplier =
    {
      N: 1, // Ng√†y
      T: 7, // Tu·∫ßn
      Th: 30, // Th√°ng
      NAM: 365, // NƒÉm
    }[loaiChinhSach] || 1;

  return soLuong * multiplier;
}

/**
 * L·∫•y danh s√°ch ch√≠nh s√°ch theo chu·∫©n backend pm_nc0008
 * @returns {Promise<Array>} Danh s√°ch ch√≠nh s√°ch v·ªõi ƒë·∫ßy ƒë·ªß th√¥ng tin
 */
export async function layDanhSachChinhSachGiaV2() {
  const payload = { table: "pm_nc0008", func: "getAllPolicies" };
  try {
    const response = await callApiWithAuth(payload);
    if (response && response.success && response.data) {
      // Map data ƒë·ªÉ ƒë·∫£m b·∫£o format ƒë√∫ng
      return response.data.map((policy) => ({
        maChinhSach: policy.lv001,
        maLoaiPT: policy.lv002,
        thoiGian: parseInt(policy.lv003) || 0,
        donGia: parseFloat(policy.lv004) || 0,
        quaGio: parseInt(policy.lv005) || 0,
        donGiaQuaGio: parseFloat(policy.lv006) || 0,
        loaiChinhSach: policy.lv007 || "",
        tongNgay: parseInt(policy.lv008) || 0,
      }));
    }
    return [];
  } catch (error) {
    console.error("L·ªói layDanhSachChinhSachGiaV2:", error);
    throw error;
  }
}

/**
 * Th√™m ch√≠nh s√°ch gi√° m·ªõi (backend pm_nc0008)
 * @param {Object} chinhSach - Th√¥ng tin ch√≠nh s√°ch
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m
 */
export async function themChinhSachV2(chinhSach) {
  const payload = {
    table: "pm_nc0008",
    func: "createPolicy",
    policyData: {
      lv001: chinhSach.maChinhSach,
      lv002: chinhSach.maLoaiPT,
      lv003: chinhSach.thoiGian,
      lv004: chinhSach.donGia,
      lv005: chinhSach.quaGio,
      lv006: chinhSach.donGiaQuaGio,
      lv007: chinhSach.loaiChinhSach,
      lv008: chinhSach.tongNgay,
    },
  };
  console.log("themChinhSachV2 - Payload g·ª≠i ƒëi:", payload);
  console.log(
    "themChinhSachV2 - tongNgay value:",
    chinhSach.tongNgay,
    "type:",
    typeof chinhSach.tongNgay
  );
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t ch√≠nh s√°ch gi√° (backend pm_nc0008)
 * @param {Object} chinhSach - Th√¥ng tin ch√≠nh s√°ch
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function suaChinhSachV2(chinhSach) {
  const payload = {
    table: "pm_nc0008",
    func: "updatePolicy",
    policyId: chinhSach.maChinhSach,
    policyData: {
      lv001: chinhSach.maChinhSach,
      lv002: chinhSach.maLoaiPT,
      lv003: chinhSach.thoiGian,
      lv004: chinhSach.donGia,
      lv005: chinhSach.quaGio,
      lv006: chinhSach.donGiaQuaGio,
      lv007: chinhSach.loaiChinhSach,
      lv008: chinhSach.tongNgay,
    },
  };
  console.log("suaChinhSachV2 - Payload g·ª≠i ƒëi:", payload);
  console.log(
    "suaChinhSachV2 - tongNgay value:",
    chinhSach.tongNgay,
    "type:",
    typeof chinhSach.tongNgay
  );
  return callApiWithAuth(payload);
}

/**
 * X√≥a ch√≠nh s√°ch gi√° (backend pm_nc0008)
 * @param {string} maChinhSach - M√£ ch√≠nh s√°ch
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaChinhSachV2(maChinhSach) {
  const payload = {
    table: "pm_nc0008",
    func: "deletePolicy",
    policyId: maChinhSach,
  };
  return callApiWithAuth(payload);
}

// ==================== Camera Management Advanced Functions ====================

/**
 * Ki·ªÉm tra tr·∫°ng th√°i ho·∫°t ƒë·ªông c·ªßa camera (online/offline)
 * @param {string} maCamera - M√£ camera c·∫ßn ki·ªÉm tra
 * @returns {Promise<Object>} Tr·∫°ng th√°i camera
 */
export async function kiemTraTrangThaiCamera(maCamera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "checkStatus",
    maCamera: maCamera,
  };
  return callApiWithAuth(payload);
}

/**
 * L·∫•y danh s√°ch camera theo khu v·ª±c
 * @param {string} maKhuVuc - M√£ khu v·ª±c
 * @returns {Promise<Array>} Danh s√°ch camera trong khu v·ª±c
 */
export async function layDanhSachCameraTheoKhuVuc(maKhuVuc) {
  const payload = {
    table: "pm_nc0006_1",
    func: "getByArea",
    maKhuVuc: maKhuVuc,
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t link RTSP c·ªßa camera
 * @param {string} maCamera - M√£ camera
 * @param {string} linkRTSP - Link RTSP m·ªõi
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatLinkCamera(maCamera, linkRTSP) {
  const payload = {
    table: "pm_nc0006_1",
    func: "updateRTSP",
    maCamera: maCamera,
    linkRTSP: linkRTSP,
  };
  return callApiWithAuth(payload);
}

/**
 * L·∫•y danh s√°ch camera theo lo·∫°i (v√†o/ra)
 * @param {string} chucNangCamera - Ch·ª©c nƒÉng camera (v√†o/ra)
 * @returns {Promise<Array>} Danh s√°ch camera theo ch·ª©c nƒÉng
 */
export async function layDanhSachCameraTheoLoai(chucNangCamera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "getByFunction",
    chucNangCamera: chucNangCamera,
  };
  return callApiWithAuth(payload);
}

/**
 * Ki·ªÉm tra tr·∫°ng th√°i t·∫•t c·∫£ camera
 * @returns {Promise<Array>} Tr·∫°ng th√°i t·∫•t c·∫£ camera
 */
export async function kiemTraTrangThaiTatCaCamera() {
  const payload = {
    table: "pm_nc0006_1",
    func: "checkAllStatus",
  };
  return callApiWithAuth(payload);
}

/**
 * T·∫°o URL RTSP ƒë·∫ßy ƒë·ªß t·ª´ th√¥ng tin camera
 * @param {Object} camera - Th√¥ng tin camera
 * @returns {string} URL RTSP ƒë·∫ßy ƒë·ªß
 */
export function taoURLRTSP(camera) {
  if (!camera.linkRTSP) return "";

  // N·∫øu ƒë√£ c√≥ protocol th√¨ tr·∫£ v·ªÅ nh∆∞ c≈©
  if (camera.linkRTSP.startsWith("rtsp://")) {
    return camera.linkRTSP;
  }

  // T·∫°o URL RTSP ƒë·∫ßy ƒë·ªß
  return `rtsp://${camera.linkRTSP}`;
}

/**
 * Test k·∫øt n·ªëi RTSP c·ªßa camera
 * @param {string} rtspUrl - URL RTSP c·∫ßn test
 * @returns {Promise<Object>} K·∫øt qu·∫£ test k·∫øt n·ªëi
 */
export async function testKetNoiRTSP(rtspUrl) {
  try {
    // T·∫°o m·ªôt video element ƒë·ªÉ test stream
    const video = document.createElement("video");
    video.src = rtspUrl;
    video.muted = true;

    return new Promise((resolve) => {
      const timeout = setTimeout(() => {
        resolve({
          success: false,
          message: "Timeout - kh√¥ng th·ªÉ k·∫øt n·ªëi trong 5 gi√¢y",
          url: rtspUrl,
        });
      }, 5000);

      video.onloadstart = () => {
        clearTimeout(timeout);
        resolve({
          success: true,
          message: "K·∫øt n·ªëi RTSP th√†nh c√¥ng",
          url: rtspUrl,
        });
      };

      video.onerror = (error) => {
        clearTimeout(timeout);
        resolve({
          success: false,
          message: `L·ªói k·∫øt n·ªëi RTSP: ${error.message || "Unknown error"}`,
          url: rtspUrl,
        });
      };
    });
  } catch (error) {
    return {
      success: false,
      message: `L·ªói test RTSP: ${error.message}`,
      url: rtspUrl,
    };
  }
}

/**
 * L·∫•y th·ªëng k√™ camera (t·ªïng s·ªë, online, offline)
 * @returns {Promise<Object>} Th·ªëng k√™ camera
 */
export async function layThongKeCamera() {
  const payload = {
    table: "pm_nc0006_1",
    func: "getStatistics",
  };
  return callApiWithAuth(payload);
}

/**
 * C·∫≠p nh·∫≠t c·∫•u h√¨nh camera (ƒë·ªô ph√¢n gi·∫£i, FPS, etc.)
 * @param {string} maCamera - M√£ camera
 * @param {Object} cauHinh - C·∫•u h√¨nh camera
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatCauHinhCamera(maCamera, cauHinh) {
  const payload = {
    table: "pm_nc0006_1",
    func: "updateConfig",
    maCamera: maCamera,
    ...cauHinh,
  };
  return callApiWithAuth(payload);
}

/**
 * L·∫•y l·ªãch s·ª≠ ho·∫°t ƒë·ªông c·ªßa camera
 * @param {string} maCamera - M√£ camera
 * @param {string} tuNgay - T·ª´ ng√†y (YYYY-MM-DD)
 * @param {string} denNgay - ƒê·∫øn ng√†y (YYYY-MM-DD)
 * @returns {Promise<Array>} L·ªãch s·ª≠ ho·∫°t ƒë·ªông
 */
export async function layLichSuCamera(maCamera, tuNgay, denNgay) {
  const payload = {
    table: "pm_nc0006_1",
    func: "getHistory",
    maCamera: maCamera,
    tuNgay: tuNgay,
    denNgay: denNgay,
  };
  return callApiWithAuth(payload);
}

/**
 * Ph√¢n lo·∫°i camera theo c·ªïng v√†o/ra v√† tr·∫°ng th√°i
 * @returns {Promise<Object>} Camera ƒë∆∞·ª£c ph√¢n lo·∫°i theo c·ªïng v√† tr·∫°ng th√°i
 */
export async function phanLoaiCameraTheoTrangThai() {
  try {
    const danhSachCamera = await layDanhSachCamera();
    const trangThaiTatCa = await kiemTraTrangThaiTatCaCamera();

    const ketQua = {
      cameraVao: [],
      cameraRa: [],
      cameraOnline: [],
      cameraOffline: [],
      tongSo: danhSachCamera.length || 0,
    };

    if (Array.isArray(danhSachCamera)) {
      danhSachCamera.forEach((camera) => {
        // Ph√¢n lo·∫°i theo ch·ª©c nƒÉng
        if (
          camera.chucNangCamera === "v√†o" ||
          camera.chucNangCamera === "V√†o"
        ) {
          ketQua.cameraVao.push(camera);
        } else if (
          camera.chucNangCamera === "ra" ||
          camera.chucNangCamera === "Ra"
        ) {
          ketQua.cameraRa.push(camera);
        }

        // Ph√¢n lo·∫°i theo tr·∫°ng th√°i (gi·∫£ ƒë·ªãnh c√≥ th√¥ng tin tr·∫°ng th√°i)
        const trangThai = trangThaiTatCa?.find(
          (t) => t.maCamera === camera.maCamera
        );
        if (trangThai?.online) {
          ketQua.cameraOnline.push(camera);
        } else {
          ketQua.cameraOffline.push(camera);
        }
      });
    }

    return ketQua;
  } catch (error) {
    console.error("L·ªói ph√¢n lo·∫°i camera:", error);
    return {
      cameraVao: [],
      cameraRa: [],
      cameraOnline: [],
      cameraOffline: [],
      tongSo: 0,
      error: error.message,
    };
  }
}

/**
 * L·∫•y danh s√°ch phi√™n g·ª≠i xe v·ªõi th√¥ng tin v·ªã tr√≠ ƒë·ªó xe (lv004)
 * @returns {Promise<Array>} Danh s√°ch phi√™n g·ª≠i xe v·ªõi v·ªã tr√≠ ƒë·ªó
 */
export async function layPhienGuiXeCoViTri() {
  const payload = {
    table: "pm_nc0009",
    func: "data",
    includeViTri: true, // Flag ƒë·ªÉ ƒë·∫£m b·∫£o lv004 ƒë∆∞·ª£c bao g·ªìm
  };
  const result = await callApiWithAuth(payload);

  // ƒê·∫£m b·∫£o mapping ƒë√∫ng t·ª´ database response
  if (Array.isArray(result)) {
    return result.map((phien) => ({
      ...phien,
      viTriGui: phien.lv004 || phien.viTriGui, // Map lv004 to viTriGui
      // C√°c field kh√°c gi·ªØ nguy√™n
      maPhien: phien.maPhien || phien.lv001,
      uidThe: phien.uidThe || phien.lv002,
      bienSo: phien.bienSo || phien.lv003,
      chinhSach: phien.chinhSach || phien.lv005,
      congVao: phien.congVao || phien.lv006,
      gioVao: phien.gioVao || phien.lv007,
      anhVao: phien.anhVao || phien.lv008,
      anhMatVao: phien.anhMatVao || phien.lv009,
      congRa: phien.congRa || phien.lv010,
      gioRa: phien.gioRa || phien.lv011,
      anhRa: phien.anhRa || phien.lv012,
      anhMatRa: phien.anhMatRa || phien.lv013,
      trangThai: phien.trangThai || phien.lv014,
    }));
  }

  return result;
}

/**
 * T·∫°o nh·∫≠t k√Ω qu√©t th·∫ª v·ªõi th·ªùi gian t·ª´ frontend
 * @param {Object} scanLogData - D·ªØ li·ªáu nh·∫≠t k√Ω qu√©t th·∫ª
 * @param {string} scanLogData.sessionId - M√£ phi√™n g·ª≠i xe
 * @param {string} scanLogData.cameraId - M√£ camera
 * @param {string} scanLogData.scanTime - Th·ªùi gian qu√©t (t·ª´ client)
 * @param {string} scanLogData.imagePath - ƒê∆∞·ªùng d·∫´n ·∫£nh
 * @param {number} scanLogData.plateMatch - Kh·ªõp bi·ªÉn s·ªë (0/1)
 * @param {string} scanLogData.direction - H∆∞·ªõng qu√©t ('entry'/'exit')
 * @returns {Promise<Object>} K·∫øt qu·∫£ t·∫°o nh·∫≠t k√Ω
 */
export async function themNhatKyQuetTheVoiThoiGian(scanLogData) {
  const payload = {
    table: "pm_nc0010",
    func: "addWithClientTime",
    sessionId: scanLogData.sessionId,
    cameraId: scanLogData.cameraId,
    clientTime: scanLogData.scanTime,
    imagePath: scanLogData.imagePath,
    plateMatch: scanLogData.plateMatch || 0,
    direction: scanLogData.direction || 'entry'
  };
  return callApiWithAuth(payload);
}

// H√†m m·ªõi ƒë·ªÉ ki·ªÉm tra xem th·∫ª c√≥ ƒë∆∞·ª£c mi·ªÖn ph√≠ kh√¥ng
export const kiemTraMienPhiTheoThe = async (uidThe) => {
    if (!uidThe) {
        console.error("UID th·∫ª l√† b·∫Øt bu·ªôc");
        return false; // Gi·∫£ ƒë·ªãnh kh√¥ng ƒë∆∞·ª£c mi·ªÖn ph√≠ n·∫øu kh√¥ng c√≥ UID
    }
    try {
        // G·ªçi API ƒë·ªÉ l·∫•y th√¥ng tin th·∫ª theo UID
        const response = await callApiWithAuth({
            table: 'pm_nc0003',
            func: 'timTheTuUID',
            uidThe: uidThe
        });
        // API tr·∫£ v·ªÅ m·ªôt m·∫£ng, ta l·∫•y ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n
        if (response.data && response.data.length > 0) {
            const cardInfo = response.data[0];
            // N·∫øu loaiThe kh√¥ng ph·∫£i l√† "KHACH" th√¨ mi·ªÖn ph√≠
            return cardInfo.loaiThe !== 'KHACH';
        }
        return false; // M·∫∑c ƒë·ªãnh kh√¥ng mi·ªÖn ph√≠ n·∫øu kh√¥ng t√¨m th·∫•y th·∫ª
    } catch (error) {
        console.error('L·ªói khi ki·ªÉm tra mi·ªÖn ph√≠ theo th·∫ª:', error);
        // Trong tr∆∞·ªùng h·ª£p l·ªói, an to√†n nh·∫•t l√† gi·∫£ ƒë·ªãnh kh√¥ng ƒë∆∞·ª£c mi·ªÖn ph√≠
        return false;
    }
};


// H√†m t√≠nh ph√≠ g·ª≠i xe
export const tinhPhiGuiXe = async (maPhien, uidThe = null) => {
    try {
        // B1: N·∫øu c√≥ uidThe, ki·ªÉm tra xem th·∫ª c√≥ ƒë∆∞·ª£c mi·ªÖn ph√≠ kh√¥ng
        if (uidThe) {
            const isFree = await kiemTraMienPhiTheoThe(uidThe);
            
            // B2: N·∫øu ƒë∆∞·ª£c mi·ªÖn ph√≠, tr·∫£ v·ªÅ ph√≠ l√† 0
            if (isFree) {
                console.log(`Th·∫ª ${uidThe} ƒë∆∞·ª£c mi·ªÖn ph√≠.`);
                return {
                    success: true,
                    phi: 0,
                    tongPhut: 0,
                    message: "Th·∫ª thu·ªôc ƒë·ªëi t∆∞·ª£ng mi·ªÖn ph√≠."
                };
            }
            console.log(`Th·∫ª ${uidThe} kh√¥ng ƒë∆∞·ª£c mi·ªÖn ph√≠, ti·∫øn h√†nh t√≠nh ph√≠ cho phi√™n ${maPhien}.`);
        } else {
            console.log(`Kh√¥ng c√≥ uidThe, ti·∫øn h√†nh t√≠nh ph√≠ tr·ª±c ti·∫øp cho phi√™n ${maPhien}.`);
        }

        // B3: Ti·∫øp t·ª•c quy tr√¨nh t√≠nh ph√≠ t·ª´ backend
        const payload = { table: "pm_nc0008", func: "tinhPhiGuiXe", maPhien };
        const response = await callApiWithAuth(payload);
        
        // Ensure response format matches what VehicleInfoComponent expects
        if (response && response.data) {
            return {
                success: true,
                phi: response.data.phi || response.data.fee || 0,
                tongPhut: response.data.tongPhut || response.data.totalMinutes || 0,
                message: response.data.message || "T√≠nh ph√≠ th√†nh c√¥ng"
            };
        } else {
            return {
                success: false,
                phi: 0,
                tongPhut: 0,
                message: "Kh√¥ng c√≥ d·ªØ li·ªáu ph√≠ t·ª´ server"
            };
        }
    } catch (error) {
        console.error('L·ªói khi t√≠nh ph√≠ g·ª≠i xe:', error);
        return {
            success: false,
            phi: 0,
            tongPhut: 0,
            message: error.message || "L·ªói t√≠nh ph√≠"
        };
    }
};
