// api.js - Chuy·ªÉn ƒë·ªïi c√°c h√†m Python sang React (JS)
// L∆∞u √Ω: C·∫ßn ch·ªânh s·ª≠a urlApi cho ƒë√∫ng endpoint backend c·ªßa b·∫°n

import { api_BienSo } from './url'

const urlApi = "http://192.168.1.94/parkinglot/services.sof.vn/index.php" // Thay ƒë·ªïi cho ƒë√∫ng backend
const urlLoginApi = "http://192.168.1.94/parkinglot/login.sof.vn/index.php"

// -------------------- Authentication helpers --------------------
let authCache = null // L∆∞u token sau l·∫ßn ƒëƒÉng nh·∫≠p ƒë·∫ßu ti√™n

async function getAuthToken(username = "admin", password = "1") {
  // Lu√¥n l·∫•y token m·ªõi ƒë·ªÉ ƒë·∫£m b·∫£o kh√¥ng b·ªã expired
  console.log("Getting fresh auth token...")

  const payload = {
    txtUserName: username,
    txtPassword: password,
  }

  const res = await fetch(urlLoginApi, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload),
  })

  if (!res.ok) {
    throw new Error("Kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p ƒë·ªÉ l·∫•y token")
  }

  authCache = await res.json()
  console.log("Got auth token:", authCache)
  return authCache
}

async function getAuthHeaders() {
  const authData = await getAuthToken()
  return {
    "Content-Type": "application/json",
    "X-USER-CODE": authData.code,
    "X-USER-TOKEN": authData.token,
  }
}

async function callApiWithAuth(payload) {
  console.log("Calling API with auth:", payload)
  const headers = await getAuthHeaders()
  console.log("Using headers:", headers)

  const res = await fetch(urlApi, {
    method: "POST",
    headers,
    body: JSON.stringify(payload),
  })

  const result = await handleApiResponse(res)
  console.log("API response:", result)
  return result
}

function handleApiResponse(response) {
  if (!response.ok) {
    console.error("API response not ok:", response.status, response.statusText)
    throw new Error(`Network response was not ok: ${response.status}`)
  }

  return response.json().then((data) => {
    console.log("Raw API response:", data)

    if (typeof data === "object" && data.success === false) {
      throw new Error(data.message || "API error")
    }
    return data
  })
}

// -------------------- API Functions --------------------

export async function layALLLoaiPhuongTien() {
  const payload = { table: "pm_nc0001", func: "data" }
  return callApiWithAuth(payload)
}

export async function themLoaiPhuongTien(loaiPhuongTien) {
  const payload = {
    table: "pm_nc0001",
    func: "add",
    maLoaiPT: loaiPhuongTien.maLoaiPT,
    tenLoaiPT: loaiPhuongTien.tenLoaiPT,
    moTa: loaiPhuongTien.moTa,
  }
  return callApiWithAuth(payload)
}

export async function capNhatLoaiPhuongTien(loaiPhuongTien) {
  const payload = {
    table: "pm_nc0001",
    func: "edit",
    maLoaiPT: loaiPhuongTien.maLoaiPT,
    tenLoaiPT: loaiPhuongTien.tenLoaiPT,
    moTa: loaiPhuongTien.moTa,
  }
  return callApiWithAuth(payload)
}

export async function xoaLoaiPhuongTien(maLoaiPT) {
  const payload = { table: "pm_nc0001", func: "delete", maLoaiPT }
  return callApiWithAuth(payload)
}

export async function layDanhSachCamera() {
  const payload = { table: "pm_nc0006_1", func: "data" }
  return callApiWithAuth(payload)
}

export async function themCamera(camera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "add",
    maCamera: camera.maCamera,
    tenCamera: camera.tenCamera,
    loaiCamera: camera.loaiCamera,
    chucNangCamera: camera.chucNangCamera,
    maKhuVuc: camera.maKhuVuc,
    linkRTSP: camera.linkRTSP,
  }
  return callApiWithAuth(payload)
}

export async function capNhatCamera(camera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "edit",
    maCamera: camera.maCamera,
    tenCamera: camera.tenCamera,
    loaiCamera: camera.loaiCamera,
    chucNangCamera: camera.chucNangCamera,
    maKhuVuc: camera.maKhuVuc,
    linkRTSP: camera.linkRTSP,
  }
  return callApiWithAuth(payload)
}

export async function xoaCamera(maCamera) {
  const payload = { table: "pm_nc0006_1", func: "delete", maCamera }
  return callApiWithAuth(payload)
}

// --- Th√™m c√°c h√†m API c√≤n l·∫°i chuy·ªÉn t·ª´ Python sang JS ---

export async function layALLPhienGuiXe() {
  const payload = { table: "pm_nc0009", func: "data" }
  return callApiWithAuth(payload)
}

export async function themPhienGuiXe(session) {
  const payload = {
    table: "pm_nc0009",
    func: "add",
    uidThe: session.uidThe,
    bienSo: session.bienSo || "",
    viTriGui: session.viTriGui,
    chinhSach: session.chinhSach,
    congVao: session.congVao,
    gioVao: session.gioVao,
    anhVao: session.anhVao || "",
    anhMatVao: session.anhMatVao || "",
    trangThai: session.trangThai || "TRONG_BAI",
    camera_id: session.camera_id,
    plate_match: session.plate_match || 0,
    plate: session.plate || ""
  }
  // Remove undefined/null values to avoid API issues
  Object.keys(payload).forEach(key => {
    if (payload[key] === undefined || payload[key] === null) {
      delete payload[key]
    }
  })
  console.log("üì§ Sending themPhienGuiXe payload:", payload)
  return callApiWithAuth(payload)
}

export async function capNhatPhienGuiXe(session) {
  const payload = {
    table: "pm_nc0009",
    func: "edit",
    maPhien: session.maPhien,
    congRa: session.congRa,
    gioRa: session.gioRa,
    anhRa: session.anhRa,
    anhMatRa: session.anhMatRa,
    camera_id: session.camera_id,
    plate_match: session.plate_match,
    plate: session.plate,
  }
  return callApiWithAuth(payload)
}

export async function loadPhienGuiXeTheoMaThe(maThe) {
  const payload = { table: "pm_nc0009", func: "layPhienGuiXeTuUID", uidThe: maThe }
  return callApiWithAuth(payload)
}

export async function loadPhienGuiXeTheoMaThe_XeRa(maThe) {
  const payload = { table: "pm_nc0009", func: "layPhienGuiXeTuUID_Da_Ra", uidThe: maThe }
  return callApiWithAuth(payload)
}

export async function taoBangChoPhienLamViec() {
  const payload = { table: "pm_nc0009", func: "taoBangChoPhienLamViec" }
  return callApiWithAuth(payload)
}

export async function tinhPhiGuiXe(maPhien) {
  const payload = { table: "pm_nc0008", func: "tinhPhiGuiXe", maPhien }
  return callApiWithAuth(payload)
}

export async function layChinhSachGiaTheoLoaiPT(maLoaiPT) {
  const payload = { table: "pm_nc0008", func: "layChinhSachTuPT", maLoaiPT }
  return callApiWithAuth(payload)
}

export async function themThe(uidThe, loaiThe, trangThai = "1") {
  // Wrapper function for backward compatibility
  return themTheRFID({ uidThe, loaiThe, trangThai })
}

// -------------------- Pricing Policy Functions --------------------
export async function layALLChinhSachGia() {
  const payload = { table: "pm_nc0008", func: "getAllPolicies" }
  const res = await callApiWithAuth(payload)
  return res.data || []
}

export async function themChinhSachGia(chinhSach) {
  console.log("themChinhSachGia called with:", chinhSach)
  const payload = { table: "pm_nc0008", func: "createPolicy", policyData: chinhSach }
  return callApiWithAuth(payload)
}

export async function capNhatChinhSachGia(maChinhSach, chinhSach) {
  console.log("capNhatChinhSachGia called with:", maChinhSach, chinhSach)
  const payload = { table: "pm_nc0008", func: "updatePolicy", policyId: maChinhSach, policyData: chinhSach }
  return callApiWithAuth(payload)
}


export async function xoaChinhSachGia(maChinhSach) {
  console.log("xoaChinhSachGia called with:", maChinhSach)
  const payload = { table: "pm_nc0008", func: "deletePolicy", policyId: maChinhSach }
  return callApiWithAuth(payload)
}

//lay danh sach cong
export async function layDanhSachCong() {
  const payload = { table: "pm_nc0007", func: "data" }
  return callApiWithAuth(payload)
}

// -------------------- Zone Management Functions --------------------
export async function layDanhSachKhuVuc() {
  const payload = { table: "pm_nc0004_2", func: "data" }
  return callApiWithAuth(payload)
}

export async function themKhuVuc(khuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "add",
    maKhuVuc: khuVuc.maKhuVuc,
    tenKhuVuc: khuVuc.tenKhuVuc,
    moTa: khuVuc.moTa || "",
  }
  return callApiWithAuth(payload)
}

export async function capNhatKhuVuc(khuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "edit",
    maKhuVuc: khuVuc.maKhuVuc,
    tenKhuVuc: khuVuc.tenKhuVuc,
    moTa: khuVuc.moTa,
  }
  return callApiWithAuth(payload)
}

export async function xoaKhuVuc(maKhuVuc) {
  const payload = { table: "pm_nc0004_2", func: "delete", maKhuVuc }
  return callApiWithAuth(payload)
}

export async function layDanhSachKhu() {
  const payload = { table: "pm_nc0004_1", func: "khu_vuc_camera_cong" }
  return callApiWithAuth(payload)
}

// --- B·ªï sung c√°c h√†m API c√≤n thi·∫øu t·ª´ Python sang JS ---

export async function xoaPhienGuiXe(maPhien) {
  const payload = { table: "pm_nc0009", func: "delete", maPhien }
  return callApiWithAuth(payload)
}

// Force refresh auth token - ƒë·ªÉ g·ªçi khi c·∫ßn l√†m m·ªõi token
export async function refreshAuthToken() {
  console.log("Forcing auth token refresh...")
  authCache = null // Clear cache
  return await getAuthToken()
}

// -------------------- RFID Card Management Functions --------------------

/**
 * L·∫•y danh s√°ch t·∫•t c·∫£ th·∫ª RFID
 * @returns {Promise<Array>} Danh s√°ch th·∫ª RFID
 */
export async function layDanhSachThe() {
  const payload = { table: "pm_nc0003", func: "data" }
  return callApiWithAuth(payload)
}

/**
 * Th√™m th·∫ª RFID m·ªõi
 * @param {Object} theRFID - Th√¥ng tin th·∫ª RFID
 * @param {string} theRFID.uidThe - UID c·ªßa th·∫ª
 * @param {string} theRFID.loaiThe - Lo·∫°i th·∫ª
 * @param {string} theRFID.trangThai - Tr·∫°ng th√°i th·∫ª (m·∫∑c ƒë·ªãnh: "1")
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m th·∫ª
 */
export async function themTheRFID(theRFID) {
  const payload = {
    table: "pm_nc0003",
    func: "add",
    uidThe: theRFID.uidThe,
    loaiThe: theRFID.loaiThe,
    trangThai: theRFID.trangThai || "1",
    // ngayPhatHanh s·∫Ω ƒë∆∞·ª£c set t·ª± ƒë·ªông ·ªü backend
  }
  return callApiWithAuth(payload)
}

/**
 * C·∫≠p nh·∫≠t th·∫ª RFID
 * @param {Object} theRFID - Th√¥ng tin th·∫ª RFID c·∫ßn c·∫≠p nh·∫≠t
 * @param {string} theRFID.uidThe - UID c·ªßa th·∫ª
 * @param {string} theRFID.loaiThe - Lo·∫°i th·∫ª
 * @param {string} theRFID.trangThai - Tr·∫°ng th√°i th·∫ª
 * @param {string} [theRFID.ngayPhatHanh] - Ng√†y ph√°t h√†nh (optional)
 * @param {string} [theRFID.bienSoXe] - Bi·ªÉn s·ªë xe (optional)
 * @param {string} [theRFID.maChinhSach] - M√£ ch√≠nh s√°ch (optional)
 * @param {string} [theRFID.ngayKetThucCS] - Ng√†y k·∫øt th√∫c ch√≠nh s√°ch (optional)
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatTheRFID(theRFID) {
  const payload = {
    table: "pm_nc0003",
    func: "edit",
    uidThe: theRFID.uidThe,
    loaiThe: theRFID.loaiThe,
    trangThai: theRFID.trangThai,
    ngayPhatHanh: theRFID.ngayPhatHanh,
    bienSoXe: theRFID.bienSoXe,
    maChinhSach: theRFID.maChinhSach,
    ngayKetThucCS: theRFID.ngayKetThucCS
  }
  return callApiWithAuth(payload)
}

/**
 * T√¨m th·∫ª ƒëang c√≥ phi√™n g·ª≠i xe
 * @param {string} uidThe - UID c·ªßa th·∫ª
 * @returns {Promise<Array>} Th√¥ng tin th·∫ª v√† phi√™n g·ª≠i xe
 */
export async function timTheDangCoPhien(uidThe) {
  const payload = {
    table: "pm_nc0003",
    func: "timTheDangCoPhien", 
    uidThe: uidThe,
  }
  return callApiWithAuth(payload)
}

// -------------------- License Plate Recognition API --------------------

/**
 * G·ª≠i ·∫£nh bi·ªÉn s·ªë l√™n API nh·∫≠n d·∫°ng
 * @param {Blob|File} imageBlob - ·∫¢nh bi·ªÉn s·ªë d·∫°ng Blob ho·∫∑c File
 * @returns {Promise<Object>} - K·∫øt qu·∫£ nh·∫≠n d·∫°ng bi·ªÉn s·ªë
 */
export async function nhanDangBienSo(imageBlob) {
  try {
    console.log("üöó B·∫Øt ƒë·∫ßu nh·∫≠n d·∫°ng bi·ªÉn s·ªë...", {
      blob: imageBlob,
      type: imageBlob.type,
      size: imageBlob.size,
      name: imageBlob.name || 'license_plate.jpg'
    })
    
    // Ch·ªâ s·ª≠ d·ª•ng FormData method v√¨ server kh√¥ng h·ªó tr·ª£ Base64
    return await nhanDangBienSoFormData(imageBlob)
    
  } catch (error) {
    console.error("‚ùå L·ªói nh·∫≠n d·∫°ng bi·ªÉn s·ªë:", error)
    throw new Error(`Kh√¥ng th·ªÉ nh·∫≠n d·∫°ng bi·ªÉn s·ªë: ${error.message}`)
  }
}

/**
 * G·ª≠i ·∫£nh bi·ªÉn s·ªë l√™n API nh·∫≠n d·∫°ng (ph∆∞∆°ng ph√°p FormData)
 * @param {Blob|File} imageBlob - ·∫¢nh bi·ªÉn s·ªë d·∫°ng Blob ho·∫∑c File
 * @returns {Promise<Object>} - K·∫øt qu·∫£ nh·∫≠n d·∫°ng bi·ªÉn s·ªë
 */
async function nhanDangBienSoFormData(imageBlob) {
  console.log("üì§ Trying FormData method...")
  
  // T·∫°o FormData ƒë·ªÉ g·ª≠i file - kh·ªõp v·ªõi Postman
  const formData = new FormData()
  
  // ƒê·∫£m b·∫£o file c√≥ ƒë√∫ng ƒë·ªãnh d·∫°ng nh∆∞ Postman
  const file = new File([imageBlob], 'license_plate.jpg', {
    type: 'image/jpeg',
    lastModified: Date.now()
  })
  
  // API server mong ƒë·ª£i field t√™n l√† 'file' ch·ª© kh√¥ng ph·∫£i 'image'
  formData.append('file', file)
  
  // Log FormData ƒë·ªÉ debug
  console.log("üì§ FormData entries:")
  for (const [key, value] of formData.entries()) {
    console.log(`  ${key}:`, value instanceof File ? {
      name: value.name,
      type: value.type,
      size: value.size
    } : value)
  }
  
  const response = await fetch(api_BienSo, {
    method: 'POST',
    body: formData,
    // Kh√¥ng set Content-Type ƒë·ªÉ browser t·ª± ƒë·ªông th√™m boundary cho multipart/form-data
  })
  
  console.log("üì° Response status (FormData):", response.status)
  console.log("üì° Response headers:", Object.fromEntries(response.headers.entries()))
  
  if (!response.ok) {
    // Log response text ƒë·ªÉ debug l·ªói 422
    const errorText = await response.text()
    console.error("‚ùå API Error Response (FormData):", errorText)
    throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`)
  }
  
  const result = await response.json()
  console.log("‚úÖ K·∫øt qu·∫£ nh·∫≠n d·∫°ng bi·ªÉn s·ªë (FormData):", result)
  return result
}

/**
 * Convert blob/file to base64 string (utility function)
 * @param {Blob|File} blob - File blob
 * @returns {Promise<string>} - base64 string
 */
export function blobToBase64(blob) {
  return new Promise((resolve, reject) => {
    const reader = new FileReader()
    reader.onload = () => resolve(reader.result)
    reader.onerror = reject
    reader.readAsDataURL(blob)
  })
}

// -------------------- Card History Management Functions --------------------
/**
 * L·∫•y nh·∫≠t k√Ω theo th·∫ª t·ª´ b·∫£ng pm_nc0010
 * @param {string} maThe - M√£ th·∫ª RFID
 * @param {string} ngay - Ng√†y theo ƒë·ªãnh d·∫°ng dd-mm-yyyy, ho·∫∑c "all" cho t·∫•t c·∫£
 * @returns {Promise<Object>} Nh·∫≠t k√Ω phi√™n g·ª≠i xe
 */
export async function layNhatKyTheoThe(maThe, ngay = "all") {
  const payload = { 
    table: "pm_nc0010", 
    func: "layNhatKyTheoThe",
    maThe: maThe,
    ngay: ngay
  }
  return callApiWithAuth(payload)
}

// -------------------- Vehicle Search Functions --------------------
/**
 * T√¨m phi√™n g·ª≠i xe theo bi·ªÉn s·ªë
 * @param {string} bienSo - Bi·ªÉn s·ªë xe
 * @returns {Promise<Array>} Danh s√°ch phi√™n g·ª≠i xe
 */
export async function timPhienTheoBienSo(bienSo) {
  const payload = { 
    table: "pm_nc0009", 
    func: "timPhienTheoBienSo", 
    bienSo: bienSo 
  }
  return callApiWithAuth(payload)
}

// -------------------- Extended Parking Session Functions --------------------
/**
 * C·∫≠p nh·∫≠t tr·∫°ng th√°i phi√™n g·ª≠i xe th√†nh "ƒêANG G·ª¨I"
 * @param {string} maPhien - M√£ phi√™n g·ª≠i xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatTrangThaiDangGui(maPhien) {
  const payload = { 
    table: "pm_nc0009", 
    func: "edit_TrangThai", 
    maPhien: maPhien 
  }
  return callApiWithAuth(payload)
}

// -------------------- Gate Management Functions --------------------
/**
 * Th√™m c·ªïng m·ªõi
 * @param {Object} cong - Th√¥ng tin c·ªïng
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m c·ªïng
 */
export async function themCong(cong) {
  const payload = {
    table: "pm_nc0007",
    func: "add",
    maCong: cong.maCong,
    tenCong: cong.tenCong,
    loaiCong: cong.loaiCong,
    viTriLapDat: cong.viTriLapDat,
    maKhuVuc: cong.maKhuVuc
  }
  return callApiWithAuth(payload)
}

/**
 * C·∫≠p nh·∫≠t th√¥ng tin c·ªïng
 * @param {Object} cong - Th√¥ng tin c·ªïng
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatCong(cong) {
  const payload = {
    table: "pm_nc0007",
    func: "edit",
    maCong: cong.maCong,
    tenCong: cong.tenCong,
    loaiCong: cong.loaiCong,
    viTriLapDat: cong.viTriLapDat,
    maKhuVuc: cong.maKhuVuc
  }
  return callApiWithAuth(payload)
}

/**
 * X√≥a c·ªïng
 * @param {string} maCong - M√£ c·ªïng
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaCong(maCong) {
  const payload = { 
    table: "pm_nc0007", 
    func: "delete", 
    maCong: maCong 
  }
  return callApiWithAuth(payload)
}

// -------------------- Extended Camera Functions --------------------
/**
 * C·∫≠p nh·∫≠t URL RTSP c·ªßa camera
 * @param {string} maCamera - M√£ camera
 * @param {string} rtspUrl - URL RTSP m·ªõi
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatRTSPCamera(maCamera, rtspUrl) {
  const payload = {
    table: "pm_nc0006_2",
    func: "updateUrl",
    id: maCamera,
    data: { rtsp_url: rtspUrl }
  }
  return callApiWithAuth(payload)
}

// -------------------- Extended Zone Functions --------------------
/**
 * L·∫•y th√¥ng tin khu v·ª±c theo m√£
 * @param {string} maKhuVuc - M√£ khu v·ª±c
 * @returns {Promise<Object>} Th√¥ng tin khu v·ª±c
 */
export async function layKhuVucTheoMa(maKhuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "getById",
    maKhuVuc: maKhuVuc
  }
  return callApiWithAuth(payload)
}

// -------------------- Parking Spot Management Functions --------------------
/**
 * L·∫•y danh s√°ch ch·ªó ƒë·ªó xe
 * @returns {Promise<Array>} Danh s√°ch ch·ªó ƒë·ªó xe
 */
export async function layDanhSachChoDo() {
  const payload = { table: "pm_nc0005", func: "data" }
  return callApiWithAuth(payload)
}

/**
 * Th√™m ch·ªó ƒë·ªó xe m·ªõi
 * @param {Object} choDo - Th√¥ng tin ch·ªó ƒë·ªó xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m ch·ªó ƒë·ªó xe
 */
export async function themChoDo(choDo) {
  const payload = {
    table: "pm_nc0005",
    func: "add",
    maChoDo: choDo.maChoDo,
    maKhuVuc: choDo.maKhuVuc,
    trangThai: choDo.trangThai || "TRONG"
  }
  return callApiWithAuth(payload)
}

/**
 * C·∫≠p nh·∫≠t th√¥ng tin ch·ªó ƒë·ªó xe
 * @param {Object} choDo - Th√¥ng tin ch·ªó ƒë·ªó xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatChoDo(choDo) {
  const payload = {
    table: "pm_nc0005",
    func: "edit",
    maChoDo: choDo.maChoDo,
    maKhuVuc: choDo.maKhuVuc,
    trangThai: choDo.trangThai
  }
  return callApiWithAuth(payload)
}

/**
 * X√≥a ch·ªó ƒë·ªó xe
 * @param {string} maChoDo - M√£ ch·ªó ƒë·ªó xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaChoDo(maChoDo) {
  const payload = { 
    table: "pm_nc0005", 
    func: "delete", 
    maChoDo: maChoDo 
  }
  return callApiWithAuth(payload)
}

// -------------------- Vehicle Management Functions --------------------
/**
 * L·∫•y danh s√°ch ph∆∞∆°ng ti·ªán
 * @returns {Promise<Array>} Danh s√°ch ph∆∞∆°ng ti·ªán
 */
export async function layDanhSachPhuongTien() {
  const payload = { table: "pm_nc0002", func: "data" }
  return callApiWithAuth(payload)
}

/**
 * Th√™m ph∆∞∆°ng ti·ªán m·ªõi
 * @param {Object} phuongTien - Th√¥ng tin ph∆∞∆°ng ti·ªán
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m ph∆∞∆°ng ti·ªán
 */
export async function themPhuongTien(phuongTien) {
  const payload = {
    table: "pm_nc0002",
    func: "add",
    bienSo: phuongTien.bienSo,
    maLoaiPT: phuongTien.maLoaiPT
  }
  return callApiWithAuth(payload)
}

/**
 * C·∫≠p nh·∫≠t th√¥ng tin ph∆∞∆°ng ti·ªán
 * @param {Object} phuongTien - Th√¥ng tin ph∆∞∆°ng ti·ªán
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatPhuongTien(phuongTien) {
  const payload = {
    table: "pm_nc0002",
    func: "edit",
    bienSo: phuongTien.bienSo,
    maLoaiPT: phuongTien.maLoaiPT
  }
  return callApiWithAuth(payload)
}

/**
 * X√≥a ph∆∞∆°ng ti·ªán
 * @param {string} bienSo - Bi·ªÉn s·ªë xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaPhuongTien(bienSo) {
  const payload = { 
    table: "pm_nc0002", 
    func: "delete", 
    bienSo: bienSo 
  }
  return callApiWithAuth(payload)
}

// -------------------- Extended RFID Card Functions --------------------
/**
 * T√¨m th·∫ª t·ª´ UID
 * @param {string} uidThe - UID th·∫ª RFID
 * @returns {Promise<Array>} Th√¥ng tin th·∫ª
 */
export async function timTheTuUID(uidThe) {
  const payload = { 
    table: "pm_nc0003", 
    func: "timTheTuUID", 
    uidThe: uidThe 
  }
  return callApiWithAuth(payload)
}

/**
 * X√≥a th·∫ª RFID
 * @param {string} uidThe - UID th·∫ª RFID
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaTheRFID(uidThe) {
  const payload = { 
    table: "pm_nc0003", 
    func: "delete", 
    uidThe: uidThe 
  }
  return callApiWithAuth(payload)
}

// -------------------- Advanced Pricing Functions --------------------
/**
 * L·∫•y danh s√°ch ch√≠nh s√°ch gi√° theo table pm_nc0008 t·ª´ ngocchung.php
 * @returns {Promise<Array>} Danh s√°ch ch√≠nh s√°ch gi√°
 */
export async function layDanhSachChinhSachGia() {
  const payload = { table: "pm_nc0008", func: "data" }
  return callApiWithAuth(payload)
}

/**
 * Th√™m ch√≠nh s√°ch gi√° m·ªõi (t·ª´ kebao.php)
 * @param {Object} chinhSach - Th√¥ng tin ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m ch√≠nh s√°ch
 */
export async function themChinhSachGiaKebao(chinhSach) {
  const payload = {
    table: "pm_nc0008",
    func: "add",
    maChinhSach: chinhSach.maChinhSach,
    maLoaiPT: chinhSach.maLoaiPT,
    thoiGian: chinhSach.thoiGian,
    donGia: chinhSach.donGia,
    quaGio: chinhSach.quaGio,
    donGiaQuaGio: chinhSach.donGiaQuaGio,
    loaiChinhSach: chinhSach.loaiChinhSach,
    tongNgay: chinhSach.tongNgay
  }
  return callApiWithAuth(payload)
}

/**
 * C·∫≠p nh·∫≠t ch√≠nh s√°ch gi√° (t·ª´ kebao.php)
 * @param {Object} chinhSach - Th√¥ng tin ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatChinhSachGiaKebao(chinhSach) {
  const payload = {
    table: "pm_nc0008",
    func: "edit",
    maChinhSach: chinhSach.maChinhSach,
    maLoaiPT: chinhSach.maLoaiPT,
    thoiGian: chinhSach.thoiGian,
    donGia: chinhSach.donGia,
    quaGio: chinhSach.quaGio,
    donGiaQuaGio: chinhSach.donGiaQuaGio,
    loaiChinhSach: chinhSach.loaiChinhSach,
    tongNgay: chinhSach.tongNgay
  }
  return callApiWithAuth(payload)
}

/**
 * X√≥a ch√≠nh s√°ch gi√° (t·ª´ kebao.php)
 * @param {string} maChinhSach - M√£ ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaChinhSachGiaKebao(maChinhSach) {
  const payload = { 
    table: "pm_nc0008", 
    func: "delete", 
    maChinhSach: maChinhSach 
  }
  return callApiWithAuth(payload)
}

// -------------------- Camera Management Functions (kebao.php) --------------------
/**
 * L·∫•y danh s√°ch camera t·ª´ kebao.php
 * @returns {Promise<Array>} Danh s√°ch camera
 */
export async function layDanhSachCameraKebao() {
  const payload = { table: "pm_nc0006_1", func: "data" }
  return callApiWithAuth(payload)
}

/**
 * Th√™m camera m·ªõi (t·ª´ kebao.php)
 * @param {Object} camera - Th√¥ng tin camera
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m camera
 */
export async function themCameraKebao(camera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "add",
    maCamera: camera.maCamera,
    tenCamera: camera.tenCamera,
    loaiCamera: camera.loaiCamera,
    chucNangCamera: camera.chucNangCamera,
    maKhuVuc: camera.maKhuVuc,
    linkRTSP: camera.linkRTSP
  }
  return callApiWithAuth(payload)
}

/**
 * C·∫≠p nh·∫≠t camera (t·ª´ kebao.php)
 * @param {Object} camera - Th√¥ng tin camera
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatCameraKebao(camera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "edit",
    maCamera: camera.maCamera,
    tenCamera: camera.tenCamera,
    loaiCamera: camera.loaiCamera,
    chucNangCamera: camera.chucNangCamera,
    maKhuVuc: camera.maKhuVuc,
    linkRTSP: camera.linkRTSP
  }
  return callApiWithAuth(payload)
}

/**
 * X√≥a camera (t·ª´ kebao.php)
 * @param {string} maCamera - M√£ camera
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaCameraKebao(maCamera) {
  const payload = { 
    table: "pm_nc0006_1", 
    func: "delete", 
    maCamera: maCamera 
  }
  return callApiWithAuth(payload)
}

// -------------------- Gate Management Functions (kebao.php) --------------------
/**
 * L·∫•y danh s√°ch c·ªïng t·ª´ kebao.php (pm_nc0007)
 * @returns {Promise<Array>} Danh s√°ch c·ªïng
 */
export async function layDanhSachCongKebao() {
  const payload = { table: "pm_nc0007", func: "data" }
  return callApiWithAuth(payload)
}

/**
 * Th√™m c·ªïng m·ªõi (t·ª´ kebao.php)
 * @param {Object} cong - Th√¥ng tin c·ªïng
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m c·ªïng
 */
export async function themCongKebao(cong) {
  const payload = {
    table: "pm_nc0007",
    func: "add",
    maCong: cong.maCong,
    tenCong: cong.tenCong,
    loaiCong: cong.loaiCong,
    viTriLapDat: cong.viTriLapDat,
    maKhuVuc: cong.maKhuVuc
  }
  return callApiWithAuth(payload)
}

/**
 * C·∫≠p nh·∫≠t c·ªïng (t·ª´ kebao.php)
 * @param {Object} cong - Th√¥ng tin c·ªïng
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatCongKebao(cong) {
  const payload = {
    table: "pm_nc0007",
    func: "edit",
    maCong: cong.maCong,
    tenCong: cong.tenCong,
    loaiCong: cong.loaiCong,
    viTriLapDat: cong.viTriLapDat,
    maKhuVuc: cong.maKhuVuc
  }
  return callApiWithAuth(payload)
}

/**
 * X√≥a c·ªïng (t·ª´ kebao.php)
 * @param {string} maCong - M√£ c·ªïng
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaCongKebao(maCong) {
  const payload = { 
    table: "pm_nc0007", 
    func: "delete", 
    maCong: maCong 
  }
  return callApiWithAuth(payload)
}

// -------------------- Parking Session Functions (kebao.php) --------------------
/**
 * L·∫•y phi√™n g·ª≠i xe theo UID th·∫ª (t·ª´ kebao.php)
 * @param {string} uidThe - UID th·∫ª RFID
 * @returns {Promise<Array>} Danh s√°ch phi√™n g·ª≠i xe
 */
export async function layPhienGuiXeTheoUIDKebao(uidThe) {
  const payload = { 
    table: "pm_nc0009", 
    func: "layPhienGuiXeTuUID", 
    uidThe: uidThe 
  }
  return callApiWithAuth(payload)
}

/**
 * L·∫•y phi√™n g·ª≠i xe ƒë√£ ra theo UID th·∫ª (t·ª´ kebao.php)
 * @param {string} uidThe - UID th·∫ª RFID
 * @returns {Promise<Array>} Danh s√°ch phi√™n g·ª≠i xe ƒë√£ ho√†n th√†nh
 */
export async function layPhienGuiXeDaRaTheoUIDKebao(uidThe) {
  const payload = { 
    table: "pm_nc0009", 
    func: "layPhienGuiXeTuUID_Da_Ra", 
    uidThe: uidThe 
  }
  return callApiWithAuth(payload)
}

/**
 * T√¨m phi√™n g·ª≠i xe theo bi·ªÉn s·ªë (t·ª´ kebao.php)
 * @param {string} bienSo - Bi·ªÉn s·ªë xe
 * @returns {Promise<Array>} Danh s√°ch phi√™n g·ª≠i xe
 */
export async function timPhienTheoBS(bienSo) {
  const payload = { 
    table: "pm_nc0009", 
    func: "timPhienTheoBienSo", 
    bienSo: bienSo 
  }
  return callApiWithAuth(payload)
}

/**
 * T·∫°o b·∫£ng cho phi√™n l√†m vi·ªác (t·ª´ kebao.php)
 * @returns {Promise<Object>} K·∫øt qu·∫£ t·∫°o b·∫£ng
 */
export async function taoBangChoPhienLamViecKebao() {
  const payload = { 
    table: "pm_nc0009", 
    func: "taoBangChoPhienLamViec" 
  }
  return callApiWithAuth(payload)
}

/**
 * C·∫≠p nh·∫≠t tr·∫°ng th√°i phi√™n g·ª≠i xe (t·ª´ kebao.php)
 * @param {string} maPhien - M√£ phi√™n g·ª≠i xe
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatTrangThaiPhienKebao(maPhien) {
  const payload = { 
    table: "pm_nc0009", 
    func: "edit_TrangThai", 
    maPhien: maPhien 
  }
  return callApiWithAuth(payload)
}

// -------------------- Zone Management Functions (ngocchung.php) --------------------
/**
 * L·∫•y khu v·ª±c theo ID (t·ª´ ngocchung.php)
 * @param {string} maKhuVuc - M√£ khu v·ª±c
 * @returns {Promise<Object>} Th√¥ng tin khu v·ª±c
 */
export async function layKhuVucTheoID(maKhuVuc) {
  const payload = { 
    table: "pm_nc0004_2", 
    func: "getById", 
    maKhuVuc: maKhuVuc 
  }
  return callApiWithAuth(payload)
}

/**
 * Th√™m khu v·ª±c m·ªõi (t·ª´ ngocchung.php)
 * @param {Object} khuVuc - Th√¥ng tin khu v·ª±c
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m khu v·ª±c
 */
export async function themKhuVucNgocChung(khuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "add",
    maKhuVuc: khuVuc.maKhuVuc,
    tenKhuVuc: khuVuc.tenKhuVuc,
    moTa: khuVuc.moTa
  }
  return callApiWithAuth(payload)
}

/**
 * C·∫≠p nh·∫≠t khu v·ª±c (t·ª´ ngocchung.php)
 * @param {Object} khuVuc - Th√¥ng tin khu v·ª±c
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatKhuVucNgocChung(khuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "edit",
    maKhuVuc: khuVuc.maKhuVuc,
    tenKhuVuc: khuVuc.tenKhuVuc,
    moTa: khuVuc.moTa
  }
  return callApiWithAuth(payload)
}

/**
 * X√≥a khu v·ª±c (t·ª´ ngocchung.php)
 * @param {string} maKhuVuc - M√£ khu v·ª±c
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaKhuVucNgocChung(maKhuVuc) {
  const payload = { 
    table: "pm_nc0004_2", 
    func: "delete", 
    maKhuVuc: maKhuVuc 
  }
  return callApiWithAuth(payload)
}

// -------------------- Camera URL Update Functions (ngocchung.php) --------------------
/**
 * C·∫≠p nh·∫≠t URL RTSP c·ªßa camera (t·ª´ ngocchung.php)
 * @param {string} id - ID camera
 * @param {string} rtspUrl - URL RTSP m·ªõi
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatURLCamera(id, rtspUrl) {
  const payload = {
    table: "pm_nc0006_2",
    func: "updateUrl",
    id: id,
    data: { rtsp_url: rtspUrl }
  }
  return callApiWithAuth(payload)
}

// -------------------- Pricing Policy Functions (ngocchung.php) --------------------
/**
 * L·∫•y t·∫•t c·∫£ ch√≠nh s√°ch gi√° (t·ª´ ngocchung.php)
 * @returns {Promise<Array>} Danh s√°ch ch√≠nh s√°ch gi√°
 */
export async function layTatCaChinhSachGiaNgocChung() {
  const payload = { 
    table: "pm_nc0008", 
    func: "getAllPolicies" 
  }
  return callApiWithAuth(payload)
}

/**
 * T·∫°o ch√≠nh s√°ch gi√° m·ªõi (t·ª´ ngocchung.php)
 * @param {Object} policy - Th√¥ng tin ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ t·∫°o ch√≠nh s√°ch
 */
export async function taoChinhSachGiaNgocChung(policy) {
  const payload = {
    table: "pm_nc0008",
    func: "createPolicy",
    ...policy
  }
  return callApiWithAuth(payload)
}

/**
 * C·∫≠p nh·∫≠t ch√≠nh s√°ch gi√° (t·ª´ ngocchung.php)
 * @param {Object} policy - Th√¥ng tin ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatChinhSachGiaNgocChung(policy) {
  const payload = {
    table: "pm_nc0008",
    func: "updatePolicy",
    ...policy
  }
  return callApiWithAuth(payload)
}

/**
 * X√≥a ch√≠nh s√°ch gi√° (t·ª´ ngocchung.php)
 * @param {string} policyId - ID ch√≠nh s√°ch gi√°
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaChinhSachGiaNgocChung(policyId) {
  const payload = {
    table: "pm_nc0008",
    func: "deletePolicy",
    policyId: policyId
  }
  return callApiWithAuth(payload)
}

/**
 * T√≠nh ph√≠ g·ª≠i xe (t·ª´ ngocchung.php)
 * @param {Object} data - D·ªØ li·ªáu t√≠nh ph√≠
 * @returns {Promise<Object>} K·∫øt qu·∫£ t√≠nh ph√≠
 */
export async function tinhPhiGuiXeNgocChung(data) {
  const payload = {
    table: "pm_nc0008",
    func: "tinhPhiGuiXe",
    ...data
  }
  return callApiWithAuth(payload)
}

/**
 * L·∫•y ch√≠nh s√°ch t·ª´ ph∆∞∆°ng ti·ªán (t·ª´ ngocchung.php)
 * @param {string} maLoaiPT - M√£ lo·∫°i ph∆∞∆°ng ti·ªán
 * @returns {Promise<Object>} Ch√≠nh s√°ch gi√°
 */
export async function layChinhSachTuPTNgocChung(maLoaiPT) {
  const payload = {
    table: "pm_nc0008",
    func: "layChinhSachTuPT",
    maLoaiPT: maLoaiPT
  }
  return callApiWithAuth(payload)
}

// -------------------- History Functions (ngocchung.php) --------------------
/**
 * L·∫•y nh·∫≠t k√Ω theo th·∫ª (t·ª´ ngocchung.php)
 * @param {string} uidThe - UID th·∫ª RFID
 * @returns {Promise<Array>} Nh·∫≠t k√Ω th·∫ª
 */
export async function layNhatKyTheoTheNgocChung(uidThe) {
  const payload = {
    table: "pm_nc0010",
    func: "layNhatKyTheoThe",
    uidThe: uidThe
  }
  return callApiWithAuth(payload)
}
