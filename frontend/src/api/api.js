// api.js - Chuy·ªÉn ƒë·ªïi c√°c h√†m Python sang React (JS)
// L∆∞u √Ω: C·∫ßn ch·ªânh s·ª≠a urlApi cho ƒë√∫ng endpoint backend c·ªßa b·∫°n

import { api_BienSo } from './url'

const urlApi = "http://192.168.1.94/parkinglot/services.sof.vn/index.php" // Thay ƒë·ªïi cho ƒë√∫ng backend
const urlLoginApi = "http://192.168.1.94/parkinglot/login.sof.vn/index.php"

// -------------------- Authentication helpers --------------------
let authCache = null // L∆∞u token sau l·∫ßn ƒëƒÉng nh·∫≠p ƒë·∫ßu ti√™n

async function getAuthToken(username = "admin", password = "1") {
  // Lu√¥n l·∫•y token m·ªõi ƒë·ªÉ ƒë·∫£m b·∫£o kh√¥ng b·ªã expired
  console.log("Getting fresh auth token...")

  const payload = {
    txtUserName: username,
    txtPassword: password,
  }

  const res = await fetch(urlLoginApi, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload),
  })

  if (!res.ok) {
    throw new Error("Kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p ƒë·ªÉ l·∫•y token")
  }

  authCache = await res.json()
  console.log("Got auth token:", authCache)
  return authCache
}

async function getAuthHeaders() {
  const authData = await getAuthToken()
  return {
    "Content-Type": "application/json",
    "X-USER-CODE": authData.code,
    "X-USER-TOKEN": authData.token,
  }
}

async function callApiWithAuth(payload) {
  console.log("Calling API with auth:", payload)
  const headers = await getAuthHeaders()
  console.log("Using headers:", headers)

  const res = await fetch(urlApi, {
    method: "POST",
    headers,
    body: JSON.stringify(payload),
  })

  const result = await handleApiResponse(res)
  console.log("API response:", result)
  return result
}

function handleApiResponse(response) {
  if (!response.ok) {
    console.error("API response not ok:", response.status, response.statusText)
    throw new Error(`Network response was not ok: ${response.status}`)
  }

  return response.json().then((data) => {
    console.log("Raw API response:", data)

    if (typeof data === "object" && data.success === false) {
      throw new Error(data.message || "API error")
    }
    return data
  })
}

// -------------------- API Functions --------------------

export async function layALLLoaiPhuongTien() {
  const payload = { table: "pm_nc0001", func: "data" }
  return callApiWithAuth(payload)
}

export async function themLoaiPhuongTien(loaiPhuongTien) {
  const payload = {
    table: "pm_nc0001",
    func: "add",
    maLoaiPT: loaiPhuongTien.maLoaiPT,
    tenLoaiPT: loaiPhuongTien.tenLoaiPT,
    moTa: loaiPhuongTien.moTa,
  }
  return callApiWithAuth(payload)
}

export async function capNhatLoaiPhuongTien(loaiPhuongTien) {
  const payload = {
    table: "pm_nc0001",
    func: "edit",
    maLoaiPT: loaiPhuongTien.maLoaiPT,
    tenLoaiPT: loaiPhuongTien.tenLoaiPT,
    moTa: loaiPhuongTien.moTa,
  }
  return callApiWithAuth(payload)
}

export async function xoaLoaiPhuongTien(maLoaiPT) {
  const payload = { table: "pm_nc0001", func: "delete", maLoaiPT }
  return callApiWithAuth(payload)
}

export async function layDanhSachCamera() {
  const payload = { table: "pm_nc0006_1", func: "data" }
  return callApiWithAuth(payload)
}

export async function themCamera(camera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "add",
    maCamera: camera.maCamera,
    tenCamera: camera.tenCamera,
    loaiCamera: camera.loaiCamera,
    chucNangCamera: camera.chucNangCamera,
    maKhuVuc: camera.maKhuVuc,
    linkRTSP: camera.linkRTSP,
  }
  return callApiWithAuth(payload)
}

export async function capNhatCamera(camera) {
  const payload = {
    table: "pm_nc0006_1",
    func: "edit",
    maCamera: camera.maCamera,
    tenCamera: camera.tenCamera,
    loaiCamera: camera.loaiCamera,
    chucNangCamera: camera.chucNangCamera,
    maKhuVuc: camera.maKhuVuc,
    linkRTSP: camera.linkRTSP,
  }
  return callApiWithAuth(payload)
}

export async function xoaCamera(maCamera) {
  const payload = { table: "pm_nc0006_1", func: "delete", maCamera }
  return callApiWithAuth(payload)
}

// --- Th√™m c√°c h√†m API c√≤n l·∫°i chuy·ªÉn t·ª´ Python sang JS ---

export async function layALLPhienGuiXe() {
  const payload = { table: "pm_nc0009", func: "data" }
  return callApiWithAuth(payload)
}

export async function themPhienGuiXe(session) {
  const payload = {
    table: "pm_nc0009",
    func: "add",
    uidThe: session.uidThe,
    bienSo: session.bienSo || "",
    viTriGui: session.viTriGui,
    chinhSach: session.chinhSach,
    congVao: session.congVao,
    gioVao: session.gioVao,
    anhVao: session.anhVao || "",
    anhMatVao: session.anhMatVao || "",
    trangThai: session.trangThai || "TRONG_BAI",
    camera_id: session.camera_id,
    plate_match: session.plate_match || 0,
    plate: session.plate || ""
  }
  // Remove undefined/null values to avoid API issues
  Object.keys(payload).forEach(key => {
    if (payload[key] === undefined || payload[key] === null) {
      delete payload[key]
    }
  })
  console.log("üì§ Sending themPhienGuiXe payload:", payload)
  return callApiWithAuth(payload)
}

export async function capNhatPhienGuiXe(session) {
  const payload = {
    table: "pm_nc0009",
    func: "edit",
    maPhien: session.maPhien,
    congRa: session.congRa,
    gioRa: session.gioRa,
    anhRa: session.anhRa,
    anhMatRa: session.anhMatRa,
    camera_id: session.camera_id,
    plate_match: session.plate_match,
    plate: session.plate,
  }
  return callApiWithAuth(payload)
}

export async function loadPhienGuiXeTheoMaThe(maThe) {
  const payload = { table: "pm_nc0009", func: "layPhienGuiXeTuUID", uidThe: maThe }
  return callApiWithAuth(payload)
}

export async function loadPhienGuiXeTheoMaThe_XeRa(maThe) {
  const payload = { table: "pm_nc0009", func: "layPhienGuiXeTuUID_Da_Ra", uidThe: maThe }
  return callApiWithAuth(payload)
}

export async function taoBangChoPhienLamViec() {
  const payload = { table: "pm_nc0009", func: "taoBangChoPhienLamViec" }
  return callApiWithAuth(payload)
}

export async function tinhPhiGuiXe(maPhien) {
  const payload = { table: "pm_nc0008", func: "tinhPhiGuiXe", maPhien }
  return callApiWithAuth(payload)
}

export async function layChinhSachGiaTheoLoaiPT(maLoaiPT) {
  const payload = { table: "pm_nc0008", func: "layChinhSachTuPT", maLoaiPT }
  return callApiWithAuth(payload)
}

export async function themThe(uidThe, loaiThe, trangThai = "1") {
  // Wrapper function for backward compatibility
  return themTheRFID({ uidThe, loaiThe, trangThai })
}

// -------------------- Pricing Policy Functions --------------------
export async function layALLChinhSachGia() {
  const payload = { table: "pm_nc0008", func: "getAllPolicies" }
  const res = await callApiWithAuth(payload)
  return res.data || []
}

export async function themChinhSachGia(chinhSach) {
  console.log("themChinhSachGia called with:", chinhSach)
  const payload = { table: "pm_nc0008", func: "createPolicy", policyData: chinhSach }
  return callApiWithAuth(payload)
}

export async function capNhatChinhSachGia(maChinhSach, chinhSach) {
  console.log("capNhatChinhSachGia called with:", maChinhSach, chinhSach)
  const payload = { table: "pm_nc0008", func: "updatePolicy", policyId: maChinhSach, policyData: chinhSach }
  return callApiWithAuth(payload)
}


export async function xoaChinhSachGia(maChinhSach) {
  console.log("xoaChinhSachGia called with:", maChinhSach)
  const payload = { table: "pm_nc0008", func: "deletePolicy", policyId: maChinhSach }
  return callApiWithAuth(payload)
}

//lay danh sach cong
export async function layDanhSachCong() {
  const payload = { table: "pm_nc0007", func: "data" }
  return callApiWithAuth(payload)
}

// -------------------- Zone Management Functions --------------------
export async function layDanhSachKhuVuc() {
  const payload = { table: "pm_nc0004_2", func: "data" }
  return callApiWithAuth(payload)
}

export async function themKhuVuc(khuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "add",
    maKhuVuc: khuVuc.maKhuVuc,
    tenKhuVuc: khuVuc.tenKhuVuc,
    moTa: khuVuc.moTa || "",
  }
  return callApiWithAuth(payload)
}

export async function capNhatKhuVuc(khuVuc) {
  const payload = {
    table: "pm_nc0004_2",
    func: "edit",
    maKhuVuc: khuVuc.maKhuVuc,
    tenKhuVuc: khuVuc.tenKhuVuc,
    moTa: khuVuc.moTa,
  }
  return callApiWithAuth(payload)
}

export async function xoaKhuVuc(maKhuVuc) {
  const payload = { table: "pm_nc0004_2", func: "delete", maKhuVuc }
  return callApiWithAuth(payload)
}

export async function layDanhSachKhu() {
  const payload = { table: "pm_nc0004_1", func: "khu_vuc_camera_cong" }
  return callApiWithAuth(payload)
}

// --- B·ªï sung c√°c h√†m API c√≤n thi·∫øu t·ª´ Python sang JS ---

export async function xoaPhienGuiXe(maPhien) {
  const payload = { table: "pm_nc0009", func: "delete", maPhien }
  return callApiWithAuth(payload)
}

// Force refresh auth token - ƒë·ªÉ g·ªçi khi c·∫ßn l√†m m·ªõi token
export async function refreshAuthToken() {
  console.log("Forcing auth token refresh...")
  authCache = null // Clear cache
  return await getAuthToken()
}

// -------------------- RFID Card Management Functions --------------------

/**
 * L·∫•y danh s√°ch t·∫•t c·∫£ th·∫ª RFID
 * @returns {Promise<Array>} Danh s√°ch th·∫ª RFID
 */
export async function layDanhSachThe() {
  const payload = { table: "pm_nc0003", func: "data" }
  return callApiWithAuth(payload)
}

/**
 * Th√™m th·∫ª RFID m·ªõi
 * @param {Object} theRFID - Th√¥ng tin th·∫ª RFID
 * @param {string} theRFID.uidThe - UID c·ªßa th·∫ª
 * @param {string} theRFID.loaiThe - Lo·∫°i th·∫ª
 * @param {string} theRFID.trangThai - Tr·∫°ng th√°i th·∫ª (m·∫∑c ƒë·ªãnh: "1")
 * @returns {Promise<Object>} K·∫øt qu·∫£ th√™m th·∫ª
 */
export async function themTheRFID(theRFID) {
  const payload = {
    table: "pm_nc0003",
    func: "add",
    uidThe: theRFID.uidThe,
    loaiThe: theRFID.loaiThe,
    trangThai: theRFID.trangThai || "1",
    // ngayPhatHanh s·∫Ω ƒë∆∞·ª£c set t·ª± ƒë·ªông ·ªü backend
  }
  return callApiWithAuth(payload)
}

/**
 * C·∫≠p nh·∫≠t th·∫ª RFID
 * @param {Object} theRFID - Th√¥ng tin th·∫ª RFID c·∫ßn c·∫≠p nh·∫≠t
 * @param {string} theRFID.uidThe - UID c·ªßa th·∫ª
 * @param {string} theRFID.loaiThe - Lo·∫°i th·∫ª
 * @param {string} theRFID.trangThai - Tr·∫°ng th√°i th·∫ª
 * @param {string} [theRFID.ngayPhatHanh] - Ng√†y ph√°t h√†nh (optional)
 * @returns {Promise<Object>} K·∫øt qu·∫£ c·∫≠p nh·∫≠t
 */
export async function capNhatTheRFID(theRFID) {
  const payload = {
    table: "pm_nc0003",
    func: "edit",
    uidThe: theRFID.uidThe,
    loaiThe: theRFID.loaiThe,
    trangThai: theRFID.trangThai,
    ngayPhatHanh: theRFID.ngayPhatHanh, // Optional, s·∫Ω d√πng ng√†y hi·ªán t·∫°i n·∫øu kh√¥ng c√≥
  }
  return callApiWithAuth(payload)
}

/**
 * X√≥a th·∫ª RFID
 * @param {string|Array<string>} uidThe - UID th·∫ª ho·∫∑c m·∫£ng UID th·∫ª c·∫ßn x√≥a
 * @returns {Promise<Object>} K·∫øt qu·∫£ x√≥a
 */
export async function xoaTheRFID(uidThe) {
  const payload = {
    table: "pm_nc0003", 
    func: "delete",
    uidThe: uidThe,
  }
  return callApiWithAuth(payload)
}

/**
 * T√¨m th·∫ª ƒëang c√≥ phi√™n g·ª≠i xe
 * @param {string} uidThe - UID c·ªßa th·∫ª
 * @returns {Promise<Array>} Th√¥ng tin th·∫ª v√† phi√™n g·ª≠i xe
 */
export async function timTheDangCoPhien(uidThe) {
  const payload = {
    table: "pm_nc0003",
    func: "timTheDangCoPhien", 
    uidThe: uidThe,
  }
  return callApiWithAuth(payload)
}

// -------------------- License Plate Recognition API --------------------

/**
 * G·ª≠i ·∫£nh bi·ªÉn s·ªë l√™n API nh·∫≠n d·∫°ng
 * @param {Blob|File} imageBlob - ·∫¢nh bi·ªÉn s·ªë d·∫°ng Blob ho·∫∑c File
 * @returns {Promise<Object>} - K·∫øt qu·∫£ nh·∫≠n d·∫°ng bi·ªÉn s·ªë
 */
export async function nhanDangBienSo(imageBlob) {
  try {
    console.log("üöó B·∫Øt ƒë·∫ßu nh·∫≠n d·∫°ng bi·ªÉn s·ªë...", {
      blob: imageBlob,
      type: imageBlob.type,
      size: imageBlob.size,
      name: imageBlob.name || 'license_plate.jpg'
    })
    
    // Ch·ªâ s·ª≠ d·ª•ng FormData method v√¨ server kh√¥ng h·ªó tr·ª£ Base64
    return await nhanDangBienSoFormData(imageBlob)
    
  } catch (error) {
    console.error("‚ùå L·ªói nh·∫≠n d·∫°ng bi·ªÉn s·ªë:", error)
    throw new Error(`Kh√¥ng th·ªÉ nh·∫≠n d·∫°ng bi·ªÉn s·ªë: ${error.message}`)
  }
}

/**
 * G·ª≠i ·∫£nh bi·ªÉn s·ªë l√™n API nh·∫≠n d·∫°ng (ph∆∞∆°ng ph√°p FormData)
 * @param {Blob|File} imageBlob - ·∫¢nh bi·ªÉn s·ªë d·∫°ng Blob ho·∫∑c File
 * @returns {Promise<Object>} - K·∫øt qu·∫£ nh·∫≠n d·∫°ng bi·ªÉn s·ªë
 */
async function nhanDangBienSoFormData(imageBlob) {
  console.log("üì§ Trying FormData method...")
  
  // T·∫°o FormData ƒë·ªÉ g·ª≠i file - kh·ªõp v·ªõi Postman
  const formData = new FormData()
  
  // ƒê·∫£m b·∫£o file c√≥ ƒë√∫ng ƒë·ªãnh d·∫°ng nh∆∞ Postman
  const file = new File([imageBlob], 'license_plate.jpg', {
    type: 'image/jpeg',
    lastModified: Date.now()
  })
  
  // API server mong ƒë·ª£i field t√™n l√† 'file' ch·ª© kh√¥ng ph·∫£i 'image'
  formData.append('file', file)
  
  // Log FormData ƒë·ªÉ debug
  console.log("üì§ FormData entries:")
  for (const [key, value] of formData.entries()) {
    console.log(`  ${key}:`, value instanceof File ? {
      name: value.name,
      type: value.type,
      size: value.size
    } : value)
  }
  
  const response = await fetch(api_BienSo, {
    method: 'POST',
    body: formData,
    // Kh√¥ng set Content-Type ƒë·ªÉ browser t·ª± ƒë·ªông th√™m boundary cho multipart/form-data
  })
  
  console.log("üì° Response status (FormData):", response.status)
  console.log("üì° Response headers:", Object.fromEntries(response.headers.entries()))
  
  if (!response.ok) {
    // Log response text ƒë·ªÉ debug l·ªói 422
    const errorText = await response.text()
    console.error("‚ùå API Error Response (FormData):", errorText)
    throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`)
  }
  
  const result = await response.json()
  console.log("‚úÖ K·∫øt qu·∫£ nh·∫≠n d·∫°ng bi·ªÉn s·ªë (FormData):", result)
  return result
}

/**
 * Convert blob/file to base64 string (utility function)
 * @param {Blob|File} blob - File blob
 * @returns {Promise<string>} - base64 string
 */
export function blobToBase64(blob) {
  return new Promise((resolve, reject) => {
    const reader = new FileReader()
    reader.onload = () => resolve(reader.result)
    reader.onerror = reject
    reader.readAsDataURL(blob)
  })
}

// -------------------- Card History Management Functions --------------------

/**
 * L·∫•y nh·∫≠t k√Ω g·ª≠i xe theo m√£ th·∫ª
 * @param {string} maThe - M√£ th·∫ª RFID c·∫ßn xem nh·∫≠t k√Ω
 * @param {string} [ngay] - Ng√†y c·∫ßn xem (ƒë·ªãnh d·∫°ng dd-mm-yyyy) ho·∫∑c 'all' ƒë·ªÉ xem t·∫•t c·∫£
 * @returns {Promise<Object>} Danh s√°ch nh·∫≠t k√Ω theo th·∫ª
 */
export async function layNhatKyTheoThe(maThe, ngay = null) {
  const payload = {
    table: "pm_nc0010",
    func: "layNhatKyTheoThe",
    maThe: maThe,
    ngay: ngay
  }
  return callApiWithAuth(payload)
}

// -------------------- Helper Functions --------------------

/**
 * T·ª± ƒë·ªông ch·ªçn ch√≠nh s√°ch m·∫∑c ƒë·ªãnh theo lo·∫°i ph∆∞∆°ng ti·ªán
 * Logic t∆∞∆°ng t·ª± nh∆∞ trong python-example/QuanLyXe.py
 * @param {string} loaiXe - Lo·∫°i xe t·ª´ WorkConfig ("xe_may" ho·∫∑c "oto") 
 * @param {string} maLoaiPT - M√£ lo·∫°i ph∆∞∆°ng ti·ªán t·ª´ API ("XE_MAY" ho·∫∑c "OT")
 * @returns {Promise<string>} - M√£ ch√≠nh s√°ch ph√π h·ª£p
 */
export async function layChinhSachMacDinhChoLoaiPT(loaiXe, maLoaiPT) {
  console.log(`üîç ƒêang l·∫•y ch√≠nh s√°ch m·∫∑c ƒë·ªãnh cho lo·∫°i xe: ${loaiXe}, m√£ lo·∫°i PT: ${maLoaiPT}`)
  
  try {
    // B∆∞·ªõc 1: Th·ª≠ l·∫•y ch√≠nh s√°ch theo m√£ lo·∫°i PT t·ª´ API
    if (maLoaiPT) {
      console.log(`üåê ƒêang g·ªçi API ƒë·ªÉ l·∫•y ch√≠nh s√°ch cho ${maLoaiPT}...`)
      const policies = await layChinhSachGiaTheoLoaiPT(maLoaiPT)
      console.log(`üí∞ Ch√≠nh s√°ch t√¨m ƒë∆∞·ª£c t·ª´ API cho ${maLoaiPT}:`, policies)
      
      if (policies && policies.length > 0) {
        const selectedPolicy = policies[0].lv001 // lv001 l√† m√£ ch√≠nh s√°ch
        if (selectedPolicy && selectedPolicy.trim() !== '') {
          console.log(`‚úÖ Ch·ªçn ch√≠nh s√°ch t·ª´ API: ${selectedPolicy}`)
          return selectedPolicy
        } else {
          console.log(`‚ö†Ô∏è Ch√≠nh s√°ch t·ª´ API kh√¥ng h·ª£p l·ªá: ${selectedPolicy}`)
        }
      } else {
        console.log(`‚ö†Ô∏è Kh√¥ng c√≥ ch√≠nh s√°ch n√†o t·ª´ API cho ${maLoaiPT}`)
      }
    }
    
    // B∆∞·ªõc 2: Fallback theo lo·∫°i xe t·ª´ WorkConfig (gi·ªëng python-example)
    let fallbackPolicy = "CS_XEMAY_4H" // M·∫∑c ƒë·ªãnh cho xe m√°y
    
    if (loaiXe === "oto" || maLoaiPT === "OT") {
      fallbackPolicy = "CS_OTO_4H"
    } else if (loaiXe === "xe_may" || maLoaiPT === "XE_MAY") {
      fallbackPolicy = "CS_XEMAY_4H"
    }
    
    console.log(`‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y ch√≠nh s√°ch t·ª´ API, s·ª≠ d·ª•ng fallback: ${fallbackPolicy}`)
    
    // ƒê·∫£m b·∫£o fallback policy kh√¥ng bao gi·ªù l√† null/empty
    if (!fallbackPolicy || fallbackPolicy.trim() === '') {
      fallbackPolicy = "CS_XEMAY_4H" // M·∫∑c ƒë·ªãnh cu·ªëi c√πng
      console.log(`üîß S·ª≠ d·ª•ng m·∫∑c ƒë·ªãnh cu·ªëi c√πng: ${fallbackPolicy}`)
    }
    
    return fallbackPolicy
    
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y ch√≠nh s√°ch:", error)
    
    // Fallback cu·ªëi c√πng d·ª±a v√†o lo·∫°i xe
    let fallbackPolicy = "CS_XEMAY_4H" // M·∫∑c ƒë·ªãnh
    
    if (loaiXe === "oto" || maLoaiPT === "OT") {
      fallbackPolicy = "CS_OTO_4H"
    } else if (loaiXe === "xe_may" || maLoaiPT === "XE_MAY") {
      fallbackPolicy = "CS_XEMAY_4H"
    }
    
    console.log(`‚ö†Ô∏è S·ª≠ d·ª•ng ch√≠nh s√°ch fallback cu·ªëi c√πng: ${fallbackPolicy}`)
    
    // ƒê·∫£m b·∫£o kh√¥ng bao gi·ªù tr·∫£ v·ªÅ null/empty
    if (!fallbackPolicy || fallbackPolicy.trim() === '') {
      fallbackPolicy = "CS_XEMAY_4H"
      console.log(`üîß S·ª≠ d·ª•ng m·∫∑c ƒë·ªãnh tuy·ªát ƒë·ªëi: ${fallbackPolicy}`)
    }
    
    return fallbackPolicy
  }
}

// -------------------- Authentication helpers --------------------
